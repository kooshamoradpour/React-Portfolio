{"version":3,"sources":["../src/index.ts","../src/helpers/logger.ts","../src/helpers/math-diff.ts","../src/helpers/output-info.ts","../src/constants/box.ts","../src/scripts/cache/cache.ts","../src/scripts/helpers.ts","../src/constants/path.ts","../src/scripts/path.ts","../src/helpers/beta.ts","../src/constants/required.ts","../src/helpers/package.ts","../src/helpers/utils.ts","../src/constants/store.ts","../src/constants/component.ts","../package.json","../src/actions/add-action.ts","../src/helpers/check.ts","../src/helpers/match.ts","../src/helpers/upgrade.ts","../src/helpers/debug.ts","../src/helpers/actions/upgrade/catch-pnpm-exec.ts","../src/helpers/exec.ts","../src/prompts/clack.ts","../src/helpers/detect.ts","../src/prompts/index.ts","../src/helpers/fix.ts","../src/constants/templates.ts","../src/actions/doctor-action.ts","../src/actions/env-action.ts","../src/actions/init-action.ts","../src/helpers/actions/init/change-npmrc.ts","../src/helpers/fetch.ts","../src/helpers/init.ts","../src/actions/list-action.ts","../src/actions/remove-action.ts","../src/helpers/remove.ts","../src/actions/upgrade-action.ts","../src/helpers/setup.ts"],"names":["chalk","Command","_gradientString","defaultColors","gradientString","logPrefix","Logger","args","item","content","options","type","lines","i","matchTextScore","text","pattern","score","textLength","patternLength","j","findMostMatchText","list","maxScore","result","printMostMatchText","mathOption","boxRound","existsSync","mkdirSync","readFileSync","unlinkSync","writeFileSync","exec","retry","InternalCompareVersions","ora","oraPromise","fileURLToPath","resolve","ROOT","resolver","path","COMPONENTS_PATH","compareVersions","version1","version2","updateComponents","autoUpdateComponents","components","currentVersion","betaVersion","latestVersion","getStore","latestBetaVersion","getComponents","error","oraExecCmd","cmd","spinner","stdout","getLatestVersion","packageName","store","getPackageVersion","getUnpkgUrl","version","url","betaComponents","downloadFile","getStoreSync","filterMissingComponents","component","c","componentsJson","log","data","bail","isGithubAction","join","PROD_DIR","PROD","CACHE_DIR","CACHE_PATH","cacheTTL","noCache","initCache","_noCache","getCacheData","cacheData","packageData","now","expiredDate","ttl","n","isExpired","pkgData","pkgVersion","getCacheExecData","key","execMessage","getBetaVersionData","getPrefixComponent","getBetaVersion","componentName","getBetaComponents","fg","versionModeRegex","getCommandDescAndLog","desc","PasCalCase","str","s","findFiles","glob","transformOption","omit","obj","keys","getColorVersion","transformPeerVersion","isMajorUpdate","isMinorUpdate","isPatchUpdate","currentVersionArr","latestVersionArr","getVersionAndMode","allDependencies","versionMode","getPackageManagerInfo","packageManager","isLatest","range","a","b","fillAnsiLength","length","stripStr","colorMatchRegex","fillSpace","strip","getPackageInfo","packagePath","transformVersion","pkg","devDependencies","dependencies","allDependenciesKeys","currentComponents","isAllComponents","HERO_UI","transformComponentsToPackage","transformPackageDetail","docs","description","detailPackageInfo","HEROUI_CLI","FRAMER_MOTION","TAILWINDCSS","THEME_UI","SYSTEM_UI","DOCS_INSTALLED","DOCS_TAILWINDCSS_SETUP","DOCS_PNPM_SETUP","DOCS_PROVIDER_SETUP","tailwindRequired","isTypescript","individualTailwindRequired","isPnpm","walkDeps","walkDepComponents","outputComponents","acc","appRequired","pnpmRequired","heroUIComponent","componentPath","pnpmDir","file","getHerouiComponentsData","heroUIComponents","heroUIComponentsKeys","heroUIcomponentsPackages","heroUIComponentsKeysSet","heroUIComponentsMap","heroUIComponentsPackageMap","initStoreComponentsData","beta","orderHeroUIComponentKeys","colorHeroUIComponentKeys","rounded","space","padStart","padEnd","versionRegex","newVersionRegex","commandName","message","warnError","componentKeyLengthMap","newVersion","value","generateComponentOutputVersion","transformComponentsOutput","outputData","boxHeader","boxHeaderSec","boxHeaderTrd","boxFooter","outputInfo","outputBox","align","borderStyle","center","color","padding","title","mergedRounded","contentArr","transformArr","isPadding","paddingLength","mergedPadding","maxLength","cur","clearColorTitle","titleLength","titleHeaderLength","spaceLen","boxHeaderContent","spaceFir","spaceSec","padFir","padSec","boxContent","transformCur","spaceLength","pad","endLen","package_default","getMatchImport","importRegexAll","matchAll","matchImport","itemImport","importRegex","match","removeQuote","getMatchArray","target","mixinReg","replaceMatchArray","_replaceValue","replaceValue","v","_value","targetArray","contentIndex","moduleIndex","insertIndex","DEFAULT_SPACE","MISSING","upgrade","all","isHeroUIAll","upgradeOptionList","missingDepSet","allOutputData","getAllOutputData","transformUpgradeOptionList","upgradePeerList","upgradeOption","getPackagePeerDep","missingDepList","getPackageUpgradeData","outputList","peerDepList","index","arr","outputDependencies","outputUpgradeCount","getUpgradeVersion","peer","output","optionMaxLenMap","compareLength","peerDependencies","peerPackage","peerVersion","formatPeerVersion","outputDefault","outputPeerDepInfo","filterPeerDepList","colorVersion","heroUIPeerDepList","heroUIThemePeerDepList","allOutputList","allPeerDepList","missingDep","count","stripLatestVersion","writeUpgradeVersion","upgradePackageList","upgradePackage","combineProblemRecord","errorInfo","missingDependencies","tailwindName","dependency","info","checkRequiredContentInstalled","dependenciesKeys","checkPeerDependenciesConfig","packageNames","peerDependenciesList","checkPeerDependencies","hasAllComponents","hasFramerMotion","hasTailwind","hasSystemUI","hasThemeUI","betaSystemUI","betaThemeUI","config","peerData","findPeerDepIndex","peerDep","findPeerDepVersion","checkTailwind","tailwindPath","logWarning","tailwindContent","contentMatch","pluginsMatch","isDarkModeCorrect","darkMode","isContentCorrect","isPluginsCorrect","plugins","individualContent","isHaveAllContent","checkApp","appPath","appContent","isAppCorrect","checkPnpm","npmrcPath","isPnpmCorrect","checkIllegalComponents","loggerError","illegalList","matchComponent","illegalComponents","matchComponents","illegalComponent","execSync","execCache","commonExecOptions","reject","cache","logCmd","_spinner","cancel","confirm","isCancel","select","cancelClack","textClack","opts","selectClack","taskClack","failText","successText","task","catchPnpmExec","execFn","debugExecAddAction","debugAddedPkg","packageJson","compData","debugRemovedPkg","findUp","prompts","defaultPromptOptions","getAutocompleteMultiselect","choices","getSelect","getMultiselect","AGENTS","LOCKS","detect","cwd","agent","lockPath","fixProvider","format","write","wrapWithHeroUIProvider","returnRegex","_","p1","fixTailwind","errorInfoList","errorType","transformErrorInfo","darkModeIndex","darkModeContent","fixPnpm","runInstall","logger","APP_REPO","PAGES_REPO","VITE_REPO","APP_DIR","PAGES_DIR","VITE_DIR","APP_NAME","PAGES_NAME","VITE_NAME","tailwindTemplate","addAction","addApp","prettier","filteredComponents","currentComponent","currentComponentsKeys","filterCurrentComponents","currentPkgManager","runCmd","mergedComponents","_missingDependencies","template","isCorrectProvider","isCorrectPnpm","basename","doctorAction","_enableCheckApp","_enableCheckPnpm","_enableCheckTailwind","enableCheckApp","enableCheckPnpm","enableCheckTailwind","tailwindPaths","problemRecord","isCorrectInstalled","_isCorrectInstalled","d","isCorrectTailwind","isCorrect","problem","envAction","renameSync","p","DEFAULT_NPMRC_CONTENT","changeNpmrc","npmrcFile","Readable","pipeline","tar","fetchTarStream","res","downloadTemplate","root","checkInitOptions","templatesMap","initAction","_projectName","_package","_template","projectName","getTableInfo","run","generateTemplate","renameTemplate","originName","listAction","remote","removeDependencies","remove","removeTailwind","insIncludeAll","removeAction","removeDepList","fs","setupPnpm","betaCompareVersions","autoChangeTag","compareResult","upgradeAction","transformComponents","mergedVersion","herouiData","isUpToDate","ignoreList","isExecute","install","r","ignore","commandList","heroui","command","isArgs","matchCommand","helpInfoArr","debug","heroUIComponentsBeta","cliLatestVersion","reason"],"mappings":"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","sourcesContent":["import type {CommandName, SAFE_ANY} from '@helpers/type';\n\nimport chalk from 'chalk';\nimport {Command} from 'commander';\n\nimport {Logger, gradientString} from '@helpers/logger';\nimport {findMostMatchText} from '@helpers/math-diff';\nimport {outputBox} from '@helpers/output-info';\nimport {getCommandDescAndLog} from '@helpers/utils';\n\nimport pkg from '../package.json';\n\nimport {addAction} from './actions/add-action';\nimport {doctorAction} from './actions/doctor-action';\nimport {envAction} from './actions/env-action';\nimport {initAction} from './actions/init-action';\nimport {listAction} from './actions/list-action';\nimport {removeAction} from './actions/remove-action';\nimport {upgradeAction} from './actions/upgrade-action';\nimport {initStoreComponentsData} from './constants/component';\nimport {getStore, store} from './constants/store';\nimport {getCacheExecData, initCache} from './scripts/cache/cache';\nimport {compareVersions, getComponents} from './scripts/helpers';\n\nconst commandList: CommandName[] = ['add', 'env', 'init', 'list', 'upgrade', 'doctor', 'remove'];\n\nconst heroui = new Command();\n\nheroui\n  .name('heroui')\n  .usage('[command]')\n  .description(getCommandDescAndLog(`\\nHeroUI CLI v${pkg.version}\\n`, ''))\n  .version(pkg.version, '-v, --version', 'Output the current version')\n  .helpOption('-h, --help', 'Display help for command')\n  .allowUnknownOption()\n  .option(\n    '--no-cache',\n    'Disable cache, by default data will be cached for 30m after the first request'\n  )\n  .option('-d, --debug', 'Debug mode will not install dependencies')\n  .action(async (_, command) => {\n    let isArgs = false;\n\n    if (command) {\n      const args = command.args?.[0];\n\n      if (args && !commandList.includes(args as CommandName)) {\n        isArgs = true;\n\n        const matchCommand = findMostMatchText(commandList, args);\n\n        if (matchCommand) {\n          Logger.error(\n            `Unknown command '${args}', Did you mean '${chalk.underline(matchCommand)}'?`\n          );\n        } else {\n          Logger.error(`Unknown command '${args}'`);\n        }\n      }\n    }\n\n    if (!isArgs) {\n      const helpInfo = (await getCacheExecData('heroui --help')) as string;\n\n      let helpInfoArr = helpInfo.split('\\n');\n\n      helpInfoArr = helpInfoArr.filter((info) => info && !info.includes('HeroUI CLI v'));\n      // Add command name color\n      helpInfoArr = helpInfoArr.map((info) => {\n        const command = info.match(/(\\w+)\\s\\[/)?.[1];\n\n        if (command) {\n          return info.replace(command, chalk.cyan(command));\n        }\n\n        return info;\n      });\n\n      Logger.log(helpInfoArr.join('\\n'));\n    }\n    process.exit(0);\n  });\n\nheroui\n  .command('init')\n  .description('Initializes a new project')\n  .argument('[projectName]', 'Name of the project to initialize')\n  .option('-t --template [string]', 'Specify a template for the new project, e.g., app, pages')\n  .option('-p --package [string]', 'The package manager to use for the new project', 'npm')\n  .action(initAction);\n\nheroui\n  .command('add')\n  .description('Adds components to your project')\n  .argument('[components...]', 'Names of components to add')\n  .option('-a --all [boolean]', 'Add all components', false)\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .option('-tw --tailwindPath [string]', 'Specify the path to the tailwind.config.js file')\n  .option('-app --appPath [string]', 'Specify the path to the App.tsx file')\n  .option('--prettier [boolean]', 'Apply Prettier formatting to the added content')\n  .option('--addApp [boolean]', 'Include App.tsx file content that requires a provider', false)\n  .option('-b --beta [boolean]', 'Add beta components', false)\n  .action(addAction);\n\nheroui\n  .command('upgrade')\n  .description('Upgrades project components to the latest versions')\n  .argument('[components...]', 'Names of components to upgrade')\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .option('-a --all [boolean]', 'Upgrade all components', false)\n  .option('-w --write [boolean]', 'Write the upgrade version to package.json file', false)\n  .option('-b --beta [boolean]', 'Upgrade beta components', false)\n  .action(upgradeAction);\n\nheroui\n  .command('remove')\n  .description('Removes components from the project')\n  .argument('[components...]', 'Names of components to remove')\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .option('-a --all [boolean]', 'Remove all components', false)\n  .option('-tw --tailwindPath [string]', 'Specify the path to the tailwind.config.js file')\n  .option('--prettier [boolean]', 'Apply Prettier formatting to the added content')\n  .action(removeAction);\n\nheroui\n  .command('list')\n  .description('Lists all components, showing status, descriptions, and versions')\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .option('-r --remote', 'List all components available remotely')\n  .action(listAction);\nheroui\n  .command('env')\n  .description('Displays debugging information for the local environment')\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .action(envAction);\n\nheroui\n  .command('doctor')\n  .description('Checks for issues in the project')\n  .option('-p --packagePath [string]', 'Specify the path to the package.json file')\n  .option('-tw --tailwindPath [string]', 'Specify the path to the tailwind.config.js file')\n  .option('-app --appPath [string]', 'Specify the path to the App.tsx file')\n  .option('-ca --checkApp [boolean]', 'Check the App.tsx file', false)\n  .option('-ct --checkTailwind [boolean]', 'Check the tailwind.config.js file', true)\n  .option('-cp --checkPnpm [boolean]', 'Check for Pnpm', true)\n  .action(doctorAction);\n\nheroui.hook('preAction', async (command) => {\n  const args = command.args?.[0];\n  const options = (command as SAFE_ANY).rawArgs.slice(2);\n  const noCache = options.includes('--no-cache');\n  const debug = options.includes('--debug') || options.includes('-d');\n  // const componentsArgs = command.args?.slice(1);\n\n  // Init cache\n  initCache(noCache);\n  // Init debug\n  store.debug = debug;\n  store.beta = options.includes('-b') || options.includes('--beta');\n\n  if (args && commandList.includes(args as CommandName)) {\n    // Before run the command init the components.json\n    const heroUIComponents = (await getComponents()).components;\n    const heroUIComponentsBeta = (await getComponents()).betaComponents;\n\n    initStoreComponentsData({beta: false, heroUIComponents: heroUIComponents});\n    store.beta && initStoreComponentsData({beta: true, heroUIComponents: heroUIComponentsBeta});\n  }\n\n  const [cliLatestVersion, latestVersion] = await Promise.all([\n    getStore('cliLatestVersion'),\n    getStore('latestVersion')\n  ]);\n\n  // Init latest version\n  store.latestVersion = latestVersion;\n  store.cliLatestVersion = cliLatestVersion;\n\n  // Add HeroUI CLI version check preAction\n  const currentVersion = pkg.version;\n\n  if (compareVersions(currentVersion, cliLatestVersion) === -1) {\n    outputBox({\n      center: true,\n      color: 'yellow',\n      padding: 1,\n      text: `${chalk.gray(\n        `Available upgrade: v${currentVersion} -> ${chalk.greenBright(\n          `v${cliLatestVersion}`\n        )}\\nRun \\`${chalk.cyan(\n          'npm install -g heroui-cli@latest'\n        )}\\` to upgrade\\nChangelog: ${chalk.underline(\n          'https://github.com/heroui-inc/heroui-cli/releases'\n        )}`\n      )}`,\n      title: gradientString('HeroUI CLI')\n    });\n    Logger.newLine();\n  }\n});\n\nheroui.parseAsync(process.argv).catch(async (reason) => {\n  Logger.newLine();\n  Logger.error('Unexpected error. Please report it as a bug:');\n  Logger.log(reason);\n  Logger.newLine();\n  process.exit(1);\n});\n","/* eslint-disable no-console */\n\nimport type {SAFE_ANY} from './type';\n\nimport chalk from 'chalk';\nimport {default as _gradientString} from 'gradient-string';\n\nexport const defaultColors = ['#F54180', '#338EF7'] as const;\n\nexport const gradientString = _gradientString(...defaultColors);\n\nconst logPrefix = gradientString('HeroUI CLI:');\n\nexport type PrefixLogType = Extract<\n  keyof typeof Logger,\n  'error' | 'gradient' | 'info' | 'log' | 'warn' | 'success'\n>;\nexport class Logger {\n  constructor() {}\n\n  static log(...args: Parameters<typeof console.log>) {\n    console.log(...args);\n  }\n\n  static info(...args: Parameters<typeof console.info>) {\n    console.info(...args.map((item) => chalk.blue(item)));\n  }\n\n  static success(...args: Parameters<typeof console.info>) {\n    console.info(...args.map((item) => chalk.green(item)));\n  }\n\n  static warn(...args: Parameters<typeof console.warn>) {\n    console.warn(...args.map((item) => chalk.yellow(item)));\n  }\n\n  static error(...args: Parameters<typeof console.error>) {\n    console.error(...args.map((item) => chalk.red(item)));\n  }\n\n  static grey(...args: Parameters<typeof console.log>) {\n    console.log(...args.map((item) => chalk.gray(item)));\n  }\n\n  static gradient(content: string | number | boolean, options?: {colors?: tinycolor.ColorInput[]}) {\n    this.log(_gradientString(...(options?.colors ?? defaultColors))(String(content)));\n  }\n\n  static prefix(type: PrefixLogType, ...args: SAFE_ANY) {\n    return this[type](logPrefix, ...args);\n  }\n\n  static newLine(lines?: number) {\n    if (!lines) lines = 1;\n\n    for (let i = 0; i < lines; i++) this.log();\n  }\n}\n","import {Logger} from './logger';\n\nfunction matchTextScore(text: string, pattern: string) {\n  let score = 0;\n  const textLength = text.length;\n  const patternLength = pattern.length;\n  let i = 0;\n  let j = 0;\n\n  while (i < textLength && j < patternLength) {\n    if (text[i] === pattern[j]) {\n      score++;\n      j++;\n    }\n\n    i++;\n  }\n\n  return score;\n}\n\nexport function findMostMatchText(list: string[], pattern: string) {\n  let maxScore = 0;\n  let result = '';\n\n  for (const text of list) {\n    const score = matchTextScore(text, pattern);\n\n    if (score > maxScore) {\n      maxScore = score;\n      result = text;\n    }\n  }\n\n  return result !== '' ? result : null;\n}\n\nexport function printMostMatchText(list: string[], pattern: string) {\n  const mathOption = findMostMatchText(list, pattern);\n\n  if (mathOption) {\n    Logger.error(`Unknown option '${pattern}', Did you mean '${mathOption}'?`);\n  } else {\n    Logger.error(`Unknown option '${pattern}'`);\n  }\n  process.exit(1);\n}\n","import type {ChalkColor, CommandName} from './type';\n\nimport chalk from 'chalk';\n\nimport {boxRound} from 'src/constants/box';\nimport {\n  type HeroUIComponent,\n  type HeroUIComponents,\n  colorHeroUIComponentKeys,\n  orderHeroUIComponentKeys\n} from 'src/constants/component';\n\nimport {Logger} from './logger';\nimport {PasCalCase, fillAnsiLength, strip} from './utils';\n\n// eslint-disable-next-line no-control-regex\nexport const colorMatchRegex = /\\u001b\\[[\\d;]+m/g;\n\nconst rounded = boxRound.round;\nconst space = '   ';\nconst padStart = `${rounded.vertical}${space}`;\nconst padEnd = `${space}${rounded.vertical}${space}`;\nconst versionRegex = /([\\W\\w]+)\\snew:/;\nconst newVersionRegex = /new:\\s([\\W\\w]+)/;\n\n/**\n * Output the components information e.g. status, description, version, etc.\n * @param components\n * @param commandName\n * @param warnError\n */\nexport function outputComponents({\n  commandName,\n  components,\n  message = 'Current installed components:\\n',\n  warnError = true\n}: {\n  components: HeroUIComponents;\n  commandName?: CommandName;\n  warnError?: boolean;\n  message?: string;\n}) {\n  if (!components.length) {\n    if (warnError) {\n      Logger.prefix('warn', 'No components found');\n    }\n\n    return;\n  }\n\n  const componentKeyLengthMap: Record<keyof HeroUIComponent | 'originVersion', number> = {\n    description: 0,\n    docs: 0,\n    name: 0,\n    originVersion: 0,\n    package: 0,\n    peerDependencies: 0,\n    status: 0,\n    style: 0,\n    version: 0\n  };\n\n  for (const component of components) {\n    for (const key in component) {\n      const str = String(component[key]);\n\n      if (key === 'version') {\n        const newVersion = str.match(newVersionRegex)?.[1];\n        const currentVersion = str.match(versionRegex)?.[1];\n\n        const value = strip(generateComponentOutputVersion(currentVersion!, newVersion!));\n\n        // Align the length of the version\n        componentKeyLengthMap[key] = Math.max(\n          componentKeyLengthMap[key],\n          Math.max(value.length, 'version'.length)\n        );\n        // Record origin version length\n        componentKeyLengthMap.originVersion = Math.max(\n          componentKeyLengthMap.originVersion,\n          currentVersion!.length\n        );\n\n        continue;\n      }\n\n      componentKeyLengthMap[key] = Math.max(componentKeyLengthMap[key], str.length);\n    }\n  }\n\n  let transformComponentsOutput = components.reduce((acc, component) => {\n    let outputData = padStart;\n\n    for (const key of orderHeroUIComponentKeys) {\n      let value = fillAnsiLength(component[key], componentKeyLengthMap[key]);\n\n      /** ======================== Replace version to new version ======================== */\n      if (commandName !== 'list' && key === 'version') {\n        // Filter list command cause it will list all the latest components\n        const currentVersion = value.match(versionRegex)?.[1]?.trim();\n        const newVersion = value.match(newVersionRegex)?.[1]?.trim();\n\n        if (currentVersion === newVersion) {\n          value = value.replace(/\\snew:\\s[\\W\\w]+(\\s+)?/, '');\n          value = fillAnsiLength(\n            `${fillAnsiLength(value, componentKeyLengthMap.originVersion)} 🚀latest`,\n            componentKeyLengthMap[key]\n          );\n          value = value.replace('latest', chalk.magentaBright.underline('latest'));\n        } else if (newVersion) {\n          value = fillAnsiLength(\n            generateComponentOutputVersion(\n              fillAnsiLength(currentVersion!, componentKeyLengthMap.originVersion),\n              newVersion\n            ),\n            componentKeyLengthMap[key]\n          );\n        }\n      }\n\n      /** ======================== Change the color according to different status ======================== */\n      if (component.status === 'stable' && colorHeroUIComponentKeys.includes(key)) {\n        value = chalk.greenBright(value);\n      } else if (component.status === 'new') {\n        value = chalk.magentaBright(value);\n      } else if (component.status === 'updated') {\n        value = chalk.blueBright(value);\n      }\n\n      outputData += value + padEnd;\n    }\n\n    outputData;\n\n    acc.push(outputData);\n\n    return acc;\n  }, [] as string[]);\n\n  /** ======================== Generate box header ======================== */\n  let boxHeader = rounded.topLeft + padStart.replace(/.*/g, rounded.horizontal).slice(1);\n  let boxHeaderSec = padStart;\n  let boxHeaderTrd = rounded.vertical + padStart.replace(/.*/g, rounded.horizontal).slice(1);\n\n  for (const key of orderHeroUIComponentKeys) {\n    boxHeader += `${rounded.horizontal.padEnd(componentKeyLengthMap[key] + 7, rounded.horizontal)}`;\n    boxHeaderSec += chalk.redBright(PasCalCase(key).padEnd(componentKeyLengthMap[key])) + padEnd;\n    boxHeaderTrd += `${rounded.horizontal.padEnd(\n      componentKeyLengthMap[key] + 7,\n      rounded.horizontal\n    )}`;\n  }\n\n  boxHeader = boxHeader.slice(0, -2) + rounded.topRight;\n  boxHeaderTrd = boxHeaderTrd.slice(0, -2) + rounded.vertical;\n\n  /** ======================== Generate box footer ======================== */\n  let boxFooter = rounded.bottomLeft + padStart.replace(/.*/g, rounded.horizontal).slice(1);\n\n  for (const key of orderHeroUIComponentKeys) {\n    boxFooter += `${rounded.horizontal.padEnd(componentKeyLengthMap[key] + 7, rounded.horizontal)}`;\n  }\n\n  boxFooter = boxFooter.slice(0, -2) + rounded.bottomRight;\n\n  transformComponentsOutput = [\n    boxHeader,\n    boxHeaderSec,\n    boxHeaderTrd,\n    ...transformComponentsOutput,\n    boxFooter\n  ];\n\n  Logger.info(message);\n\n  Logger.log(transformComponentsOutput.join('\\n'));\n}\n\n/**\n * Output the environment information e.g. OS, CPU, Node version, etc.\n */\nexport function outputInfo() {\n  Logger.newLine();\n  Logger.log(chalk.redBright('Environment Info:'));\n  Logger.log(chalk.blueBright('  System:'));\n  Logger.log(chalk.blueBright('    OS:'), process.platform);\n  Logger.log(chalk.blueBright('    CPU:'), process.arch);\n  Logger.log(chalk.greenBright('  Binaries:'));\n  Logger.log(chalk.greenBright('    Node:'), process.version);\n  Logger.newLine();\n}\n\n/**\n * Output a box with the content\n * @param text\n * @param center\n * @param log\n * @param color\n * @param title\n * @param borderStyle\n * @param padding\n * @param align\n */\nexport function outputBox({\n  align = 'center',\n  borderStyle = 'round',\n  center = false,\n  color,\n  log = true,\n  padding = 0,\n  text,\n  title\n}: {\n  text: string;\n  center?: boolean;\n  log?: boolean;\n  color?: ChalkColor;\n  title?: string;\n  borderStyle?: keyof typeof boxRound;\n  padding?: number;\n  align?: 'left' | 'center' | 'right';\n}) {\n  const rounded = boxRound[borderStyle];\n  const mergedRounded = color\n    ? Object.fromEntries(Object.entries(rounded).map(([key, value]) => [key, chalk[color](value)]))\n    : rounded;\n  const contentArr = text.split('\\n');\n  const transformArr = contentArr.map((c) => c.replace(colorMatchRegex, ''));\n\n  const isPadding = padding > 0;\n  const paddingLength = padding;\n\n  const mergedPadding = center || isPadding;\n\n  let maxLength = transformArr.reduce((acc, cur) => (cur.length > acc ? cur.length : acc), 0);\n\n  // Update the padding maxLength\n  // paddingLength * 2 because one vertical line == 4 spaces\n  maxLength = isPadding ? maxLength + paddingLength * 4 : maxLength;\n\n  const clearColorTitle = title ? title.replace(colorMatchRegex, '') : '';\n  const titleLength = title ? clearColorTitle.length : 0;\n  let titleHeaderLength = maxLength - titleLength;\n  const spaceLen = 2;\n\n  while (titleLength + spaceLen + paddingLength >= maxLength) {\n    // Need to adjust the maxLength\n    maxLength += Math.floor(titleLength / 2);\n  }\n  // Update the titleHeaderLength\n  titleHeaderLength = maxLength - titleLength;\n\n  const boxHeaderContent = (() => {\n    if (title) {\n      if (align === 'center') {\n        const spaceFir = Math.floor(titleHeaderLength / 2) - 1;\n        const spaceSec = Math.ceil(titleHeaderLength / 2) - 1;\n\n        const padFir = spaceFir > 0 ? mergedRounded.horizontal.repeat(spaceFir) : '';\n        const padSec = spaceSec > 0 ? mergedRounded.horizontal.repeat(spaceSec) : '';\n\n        return `${padFir} ${title} ${padSec}`;\n      } else if (align === 'left') {\n        return ` ${title} ${mergedRounded.horizontal.repeat(titleHeaderLength - 2)}`;\n      } else {\n        return `${mergedRounded.horizontal.repeat(titleHeaderLength - 2)} ${title} `;\n      }\n    }\n\n    return mergedRounded.horizontal.repeat(maxLength);\n  })();\n\n  const boxHeader = mergedRounded.topLeft + boxHeaderContent + mergedRounded.topRight;\n  const boxFooter =\n    mergedRounded.bottomLeft +\n    mergedRounded.horizontal.repeat(maxLength) +\n    mergedRounded.bottomRight;\n\n  let boxContent = contentArr.reduce((acc, cur) => {\n    const transformCur = cur.replace(colorMatchRegex, '');\n    const spaceLength = maxLength - transformCur.length;\n\n    const pad = ' '.repeat(spaceLength);\n\n    const spaceFir = Math.floor(spaceLength / 2);\n    const spaceSec = Math.ceil(spaceLength / 2);\n\n    const padFir = spaceFir > 0 ? ' '.repeat(spaceFir) : '';\n    const padSec = spaceSec > 0 ? ' '.repeat(spaceSec) : '';\n\n    // Over 2 cause one vertical line == 2 spaces\n    // paddingLength = Math.floor(Math.max(paddingLength, spaceFir, spaceSec) / 2);\n\n    if (center) {\n      acc.push(\n        `${mergedRounded.vertical}${spaceLength ? `${padFir}${cur}${padSec}` : cur}${\n          mergedRounded.vertical\n        }`\n      );\n    } else if (padding) {\n      const endLen = spaceLength - paddingLength * 2;\n\n      acc.push(\n        `${mergedRounded.vertical}${' '.repeat(paddingLength * 2)}${cur}${' '.repeat(endLen)}${\n          mergedRounded.vertical\n        }`\n      );\n    } else {\n      acc.push(\n        `${mergedRounded.vertical}${spaceLength > 0 ? `${cur}${pad}` : cur}${\n          mergedRounded.vertical\n        }`\n      );\n    }\n\n    return acc;\n  }, [] as string[]);\n\n  // Generate the padding\n  if (mergedPadding) {\n    for (let i = 0; i < paddingLength; i++) {\n      boxContent.unshift(\n        `${mergedRounded.vertical}${' '.repeat(maxLength)}${mergedRounded.vertical}`\n      );\n      boxContent.push(`${mergedRounded.vertical}${' '.repeat(maxLength)}${mergedRounded.vertical}`);\n    }\n  }\n\n  boxContent = [boxHeader, ...boxContent, boxFooter];\n\n  log && Logger.log(boxContent.join('\\n'));\n\n  return boxContent.join('\\n');\n}\n\nfunction generateComponentOutputVersion(currentVersion: string, newVersion: string) {\n  return `${chalk.white(`${currentVersion} ->`)} ${chalk.yellowBright(`${newVersion} (new)`)}`;\n}\n\nexport function outputDeprecatedInfo() {\n  outputBox({\n    color: 'yellow',\n    padding: 1,\n    text: `NextUI has rebranded to HeroUI! These packages are deprecated and won’t receive updates.\nHeroUI offers the same great features with ongoing improvements.\n\n→ ${chalk.bold('Switch to [HeroUI](https://heroui.com) for the latest updates.')}\n→ ${chalk.bold('Migration guide:')} [NextUI to HeroUI](https://heroui.com/docs/nextui-to-heroui)\n→ ${chalk.bold('New NPM package:')} \"@heroui/react\"\n\nThanks for your support — see you at HeroUI!`,\n    title: chalk.yellow(`❗️ Notice: NextUI is now ${chalk.bold('HeroUI')} ❗️`)\n  });\n}\n","export const boxRound = {\n  bold: {\n    bottomLeft: '┗',\n    bottomRight: '┛',\n    horizontal: '━',\n    topLeft: '┏',\n    topRight: '┓',\n    vertical: '┃'\n  },\n  classic: {\n    bottomLeft: '+',\n    bottomRight: '+',\n    horizontal: '-',\n    topLeft: '+',\n    topRight: '+',\n    vertical: '|'\n  },\n  double: {\n    bottomLeft: '╚',\n    bottomRight: '╝',\n    horizontal: '═',\n    topLeft: '╔',\n    topRight: '╗',\n    vertical: '║'\n  },\n  doubleSingle: {\n    bottomLeft: '╘',\n    bottomRight: '╛',\n    horizontal: '═',\n    topLeft: '╒',\n    topRight: '╕',\n    vertical: '│'\n  },\n  round: {\n    bottomLeft: '╰',\n    bottomRight: '╯',\n    horizontal: '─',\n    topLeft: '╭',\n    topRight: '╮',\n    vertical: '│'\n  },\n  single: {\n    bottomLeft: '└',\n    bottomRight: '┘',\n    horizontal: '─',\n    topLeft: '┌',\n    topRight: '┐',\n    vertical: '│'\n  },\n  singleDouble: {\n    bottomLeft: '╙',\n    bottomRight: '╜',\n    horizontal: '─',\n    topLeft: '╓',\n    topRight: '╖',\n    vertical: '║'\n  }\n};\n","import type {SAFE_ANY} from '@helpers/type';\n\nimport {existsSync, mkdirSync, readFileSync, unlinkSync, writeFileSync} from 'node:fs';\n\nimport {oraExecCmd} from '../helpers';\nimport {CACHE_DIR, CACHE_PATH} from '../path';\n\nconst cacheTTL = 30 * 60_000; // 30min\nlet noCache = false;\n\nexport interface CacheData {\n  [packageName: string]: {\n    version: string;\n    date: Date;\n    formatDate: string;\n    expiredDate: number;\n    expiredFormatDate: string;\n    execResult: SAFE_ANY;\n  };\n}\n\nexport function initCache(_noCache = noCache) {\n  noCache = !!_noCache;\n\n  const isExistCache = existsSync(CACHE_DIR);\n\n  if (isExistCache) return;\n\n  mkdirSync(CACHE_DIR, {recursive: true});\n  writeFileSync(CACHE_PATH, JSON.stringify({}), 'utf8');\n}\n\nexport function getCacheData(): CacheData {\n  const data = readFileSync(CACHE_PATH, 'utf8');\n\n  return JSON.parse(data);\n}\n\n/**\n * Used to cache unknown npm package expired time 30m\n * @packageName string\n */\nexport function cacheData(\n  packageName: string,\n  packageData: {\n    version?: string;\n    execResult?: SAFE_ANY;\n  },\n  cacheData?: CacheData\n) {\n  initCache();\n\n  const data = cacheData ?? getCacheData();\n  const now = new Date();\n  const expiredDate = +now + cacheTTL;\n\n  data[packageName] = {\n    ...(packageData as SAFE_ANY),\n    date: now,\n    expiredDate,\n    expiredFormatDate: new Date(expiredDate).toString(),\n    formatDate: now.toString()\n  };\n\n  writeFileSync(CACHE_PATH, JSON.stringify(data, undefined, 2), 'utf-8');\n}\n\nexport function removeCache() {\n  unlinkSync(CACHE_DIR);\n}\n\nfunction now() {\n  return +new Date();\n}\n\nfunction ttl(n: number) {\n  return now() - n;\n}\n\nexport function isExpired(packageName: string, cacheData?: CacheData) {\n  // If noCache then always return true\n  if (noCache) return true;\n\n  const data = cacheData ?? getCacheData();\n  const pkgData = data[packageName];\n\n  if (!pkgData?.expiredDate) return true;\n\n  return ttl(pkgData.expiredDate) > 0;\n}\n\nexport async function getPackageVersion(packageName: string) {\n  const data = getCacheData();\n  const isExpiredPkg = isExpired(packageName, data);\n\n  // If expired or don't exist then init data\n  if (isExpiredPkg) {\n    const version = await oraExecCmd(\n      `npm view ${packageName} version`,\n      `Fetching ${packageName} latest version`\n    );\n\n    const pkgVersion = {version};\n\n    cacheData(packageName, pkgVersion, data);\n\n    return pkgVersion;\n  }\n\n  return data[packageName]!;\n}\n\nexport async function getCacheExecData<T extends SAFE_ANY>(\n  key: string,\n  execMessage?: string\n): Promise<T> {\n  const data = getCacheData();\n  const isExpiredPkg = isExpired(key, data);\n\n  // If expired or don't exist then init data\n  if (isExpiredPkg) {\n    const execResult = await oraExecCmd(key, execMessage);\n\n    const result = {execResult};\n\n    cacheData(key, result, data);\n\n    return result.execResult;\n  }\n\n  return data[key]!.execResult;\n}\n","import type {SAFE_ANY} from '@helpers/type';\n\nimport {exec} from 'node:child_process';\nimport {existsSync, readFileSync, writeFileSync} from 'node:fs';\n\nimport retry from 'async-retry';\nimport chalk from 'chalk';\nimport {compareVersions as InternalCompareVersions} from 'compare-versions';\nimport ora, {oraPromise} from 'ora';\n\nimport {Logger} from '@helpers/logger';\nimport {COMPONENTS_PATH} from 'src/constants/path';\nimport {getStore, getStoreSync, store} from 'src/constants/store';\n\nimport {getPackageVersion} from './cache/cache';\n\nexport type Dependencies = Record<string, string>;\n\nexport type Components = {\n  name: string;\n  package: string;\n  version: string;\n  docs: string;\n  description: string;\n  status: string;\n  style: string;\n  peerDependencies: Dependencies;\n}[];\n\nexport type ComponentsJson = {\n  version: string;\n  components: Components;\n  betaComponents: Components;\n  betaVersion: string;\n};\n\n/**\n * Compare two versions\n * @example compareVersions('1.0.0', '1.0.1') // -1\n * compareVersions('1.0.1', '1.0.0') // 1\n * compareVersions('1.0.0', '1.0.0') // 0\n * @param version1\n * @param version2\n */\nexport function compareVersions(version1 = '', version2 = '') {\n  try {\n    return InternalCompareVersions(version1, version2);\n  } catch {\n    // Can't not support ('18 || 19.0.0-rc.0' received) temporary solution\n    return 0;\n  }\n}\n\nexport async function updateComponents() {\n  if (!existsSync(COMPONENTS_PATH)) {\n    // First time download the latest date from net\n    await autoUpdateComponents();\n\n    return;\n  }\n\n  const components = JSON.parse(readFileSync(COMPONENTS_PATH, 'utf-8')) as ComponentsJson;\n  const currentVersion = components.version;\n  const betaVersion = components.betaVersion;\n  const latestVersion = await getStore('latestVersion');\n  const latestBetaVersion = await getStore('betaVersion');\n\n  if (\n    compareVersions(currentVersion, latestVersion) === -1 ||\n    compareVersions(betaVersion, latestBetaVersion) === -1\n  ) {\n    // After the first time, check the version and update\n    await autoUpdateComponents(latestVersion, latestBetaVersion);\n  }\n}\n\nexport async function getComponents() {\n  let components: ComponentsJson = {} as ComponentsJson;\n\n  await updateComponents();\n\n  try {\n    components = JSON.parse(readFileSync(COMPONENTS_PATH, 'utf-8')) as ComponentsJson;\n  } catch (error) {\n    new Error(`Get components.json error: ${error}`);\n  }\n\n  return components;\n}\n\nexport async function oraExecCmd(cmd: string, text?: string): Promise<SAFE_ANY> {\n  text = text ?? `Executing ${cmd}`;\n\n  const spinner = ora({\n    // Open ctrl + c cancel\n    discardStdin: false,\n    spinner: {\n      frames: [\n        `⠋ ${chalk.gray(`${text}.`)}`,\n        `⠙ ${chalk.gray(`${text}..`)}`,\n        `⠹ ${chalk.gray(`${text}...`)}`,\n        `⠸ ${chalk.gray(`${text}.`)}`,\n        `⠼ ${chalk.gray(`${text}..`)}`,\n        `⠴ ${chalk.gray(`${text}...`)}`,\n        `⠦ ${chalk.gray(`${text}.`)}`,\n        `⠧ ${chalk.gray(`${text}..`)}`,\n        `⠇ ${chalk.gray(`${text}...`)}`,\n        `⠏ ${chalk.gray(`${text}.`)}`\n      ],\n      interval: 150\n    }\n  });\n\n  spinner.start();\n\n  const result = await new Promise((resolve) => {\n    exec(cmd, (error, stdout) => {\n      if (error) {\n        Logger.error(`Exec cmd ${cmd} error`);\n        process.exit(1);\n      }\n      resolve(stdout.trim());\n    });\n  });\n\n  spinner.stop();\n\n  return result;\n}\n\nexport async function getLatestVersion(packageName: string): Promise<string> {\n  if (store.heroUIComponentsPackageMap[packageName]) {\n    return store.heroUIComponentsPackageMap[packageName]!.version;\n  }\n\n  const result = await getPackageVersion(packageName);\n\n  return result.version;\n}\n\nconst getUnpkgUrl = (version: string) =>\n  `https://unpkg.com/@heroui/react@${version}/dist/components.json`;\n\nexport async function autoUpdateComponents(latestVersion?: string, betaVersion?: string) {\n  [latestVersion, betaVersion] = await Promise.all([\n    latestVersion || getStore('latestVersion'),\n    betaVersion || getStore('betaVersion')\n  ]);\n\n  const url = getUnpkgUrl(latestVersion);\n\n  const [components, betaComponents] = await Promise.all([\n    downloadFile(url),\n    getStoreSync('beta') ? downloadFile(getUnpkgUrl(betaVersion), false) : Promise.resolve([])\n  ]);\n\n  const filterMissingComponents = betaComponents.filter(\n    (component) => !components.find((c) => c.name === component.name)\n  );\n\n  // Add missing beta components to components\n  components.push(...filterMissingComponents);\n\n  const componentsJson: ComponentsJson = {\n    betaComponents,\n    betaVersion,\n    components,\n    version: latestVersion\n  };\n\n  writeFileSync(COMPONENTS_PATH, JSON.stringify(componentsJson, null, 2), 'utf-8');\n\n  return componentsJson;\n}\n\nexport async function downloadFile(url: string, log = true): Promise<Components> {\n  let data;\n\n  await oraPromise(\n    retry(\n      async (bail) => {\n        try {\n          const result = await fetch(url, {\n            body: null,\n            headers: {\n              'Content-Type': 'application/json',\n              accept:\n                'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7'\n            },\n            method: 'GET',\n            mode: 'cors'\n          });\n\n          data = JSON.parse(await result.text());\n        } catch (error) {\n          bail(error);\n        }\n      },\n      {\n        retries: 3\n      }\n    ),\n    {\n      failText(error) {\n        log && Logger.prefix('error', `Update components data error: ${error}`);\n        process.exit(1);\n      },\n      ...(log ? {successText: chalk.greenBright('Components data updated successfully!\\n')} : {}),\n      text: 'Fetching components data...'\n    }\n  );\n\n  return data;\n}\n\nexport const isGithubAction = process.env['CI'] === 'true';\n","import {fileURLToPath} from 'node:url';\n\nimport {resolve} from 'pathe';\n\nexport const ROOT = process.cwd();\nexport const resolver = (path: string) => resolve(ROOT, path);\n\nexport const COMPONENTS_PATH = resolve(fileURLToPath(import.meta.url), '../components.json');\n","import {existsSync} from 'node:fs';\nimport {fileURLToPath} from 'node:url';\n\nimport {join, resolve} from 'pathe';\n\nexport const ROOT = resolve(fileURLToPath(import.meta.url), '../..');\n\nexport const resolver = (path: string) => resolve(ROOT, path);\n\nconst PROD_DIR = resolve(fileURLToPath(import.meta.url), '..');\nconst PROD = existsSync(join(PROD_DIR, 'components.json'));\n\nexport const CACHE_DIR = PROD\n  ? resolve(`${PROD_DIR}/.heroui-cli-cache`)\n  : resolve(join(ROOT, '..'), 'node_modules/.heroui-cli-cache');\nexport const CACHE_PATH = resolve(`${CACHE_DIR}/data.json`);\n","import {store} from 'src/constants/store';\nimport {getCacheExecData} from 'src/scripts/cache/cache';\n\nimport {Logger} from './logger';\n\nexport async function getBetaVersionData(component: string) {\n  const data = await getCacheExecData<string>(\n    `npm view ${component} dist-tags --json`,\n    `Fetching ${component} tags`\n  );\n\n  return data;\n}\n\nexport function getPrefixComponent(component: string) {\n  return `@heroui/${component.replace('@heroui/', '')}`;\n}\n\nexport async function getBetaVersion(componentName: string) {\n  if (store.betaHeroUIComponentsPackageMap[componentName]) {\n    return store.betaHeroUIComponentsPackageMap[componentName]!.version;\n  }\n\n  const data = await getBetaVersionData(componentName);\n\n  try {\n    return JSON.parse(data).beta;\n  } catch (error) {\n    Logger.error(`Get beta version error: ${error}`);\n    process.exit(1);\n  }\n}\n\n/**\n * @example Input: [\"drawer\"]\n *\n * Return:\n * [\"@heroui/drawer@beta\"]\n */\nexport async function getBetaComponents(components: string[]) {\n  const componentsVersionList = await Promise.all(\n    components.map(getPrefixComponent).map(async (c) => {\n      const version = await getBetaVersion(c);\n\n      return `${getPrefixComponent(c)}@${version}`;\n    })\n  );\n\n  return componentsVersionList;\n}\n","import {existsSync} from 'node:fs';\n\nimport fg from 'fast-glob';\nimport {join} from 'pathe';\n\nimport {getPackageInfo} from '@helpers/package';\n\nimport {type HeroUIComponent, type HeroUIComponents} from './component';\nimport {resolver} from './path';\n\nexport const HEROUI_CLI = 'heroui-cli';\n\nexport const FRAMER_MOTION = 'framer-motion';\nexport const TAILWINDCSS = 'tailwindcss';\nexport const HERO_UI = '@heroui/react';\nexport const THEME_UI = '@heroui/theme';\nexport const SYSTEM_UI = '@heroui/system';\nexport const ALL_COMPONENTS_REQUIRED = [HERO_UI, FRAMER_MOTION] as const;\n\nexport const DOCS_INSTALLED = 'https://heroui.com/docs/guide/installation#global-installation';\nexport const DOCS_TAILWINDCSS_SETUP =\n  'https://heroui.com/docs/guide/installation#tailwind-css-setup';\nexport const DOCS_APP_SETUP = 'https://heroui.com/docs/guide/installation#provider-setup';\nexport const DOCS_PNPM_SETUP = 'https://heroui.com/docs/guide/installation#setup-pnpm-optional';\nexport const DOCS_PROVIDER_SETUP = 'https://heroui.com/docs/guide/installation#provider-setup';\n\n// Record the required content of tailwind.config file\nexport const tailwindRequired = {\n  checkPluginsRegex: /heroui(([\\W\\w]+)?)/,\n  content: './node_modules/@heroui/theme/dist/**/*.{js,ts,jsx,tsx}',\n  darkMode: 'darkMode: \"class\"',\n  importContent: (isTypescript = false) => {\n    if (isTypescript) {\n      return `import {heroui} from '@heroui/theme';`;\n    }\n\n    return `const {heroui} = require('@heroui/theme');`;\n  },\n  plugins: 'heroui()'\n} as const;\n\nexport const individualTailwindRequired = {\n  content: (currentComponents: HeroUIComponents, isPnpm: boolean) => {\n    currentComponents.forEach((component) => {\n      const walkDeps = walkDepComponents(component, isPnpm) as HeroUIComponents;\n\n      currentComponents.push(...walkDeps);\n    });\n\n    const outputComponents = [\n      ...new Set(\n        currentComponents.map((component) => {\n          return component.style || component.name;\n        })\n      )\n    ];\n\n    if (outputComponents.length === 1) {\n      return `./node_modules/@heroui/theme/dist/components/${outputComponents[0]}.js`;\n    }\n    const requiredContent = outputComponents\n      .reduce((acc, component) => {\n        return (acc += `${component}|`);\n      }, '')\n      .replace(/\\|$/, '');\n\n    return `./node_modules/@heroui/theme/dist/components/(${requiredContent}).js`;\n  },\n  plugins: 'heroui()'\n} as const;\n\nexport const appRequired = {\n  import: 'HeroUIProvider'\n} as const;\n\nexport const pnpmRequired = {\n  content: 'public-hoist-pattern[]=*@heroui/*'\n} as const;\n\nexport function walkDepComponents(heroUIComponent: HeroUIComponent, isPnpm: boolean) {\n  const component = heroUIComponent.name;\n  let componentPath = resolver(`node_modules/@heroui/${component}`);\n  const components = [heroUIComponent];\n\n  if (!existsSync(componentPath) && isPnpm) {\n    const pnpmDir = resolver('node_modules/.pnpm');\n\n    const file = fg.sync(`**/@heroui/${component}`, {\n      absolute: true,\n      cwd: pnpmDir,\n      onlyDirectories: true\n    })[0];\n\n    if (file) {\n      componentPath = file;\n    } else {\n      return components;\n    }\n  }\n\n  const {currentComponents} = getPackageInfo(join(componentPath, 'package.json'));\n\n  if (currentComponents.length) {\n    for (const component of currentComponents) {\n      const result = walkDepComponents(component, isPnpm);\n\n      components.push(...result);\n    }\n  }\n\n  return components;\n}\n","import type {UpgradeOption} from './upgrade';\n\nimport {readFileSync} from 'node:fs';\n\nimport {type HeroUIComponents} from 'src/constants/component';\nimport {HERO_UI} from 'src/constants/required';\nimport {store} from 'src/constants/store';\nimport {getCacheExecData} from 'src/scripts/cache/cache';\nimport {getLatestVersion} from 'src/scripts/helpers';\n\nimport {Logger} from './logger';\nimport {colorMatchRegex} from './output-info';\nimport {getVersionAndMode} from './utils';\n\n/**\n * Get the package information\n * @param packagePath string\n * @param transformVersion boolean\n */\nexport function getPackageInfo(packagePath: string, transformVersion = true) {\n  let pkg;\n\n  try {\n    pkg = JSON.parse(readFileSync(packagePath, 'utf-8'));\n  } catch (error) {\n    Logger.prefix('error', `Error reading package.json file: ${packagePath} \\nError: ${error}`);\n  }\n\n  const devDependencies = pkg.devDependencies || {};\n  const dependencies = pkg.dependencies || {};\n  const allDependencies = {...devDependencies, ...dependencies};\n  const allDependenciesKeys = new Set(Object.keys(allDependencies));\n\n  const currentComponents = (store.heroUIComponents as unknown as HeroUIComponents)\n    .map((component) => {\n      let version = component.version;\n      let versionMode = component.versionMode;\n\n      if (allDependenciesKeys.has(component.package)) {\n        const data = getVersionAndMode(allDependencies, component.package);\n\n        version = transformVersion ? `${data.currentVersion} new: ${version}` : data.currentVersion;\n        versionMode = data.versionMode;\n      }\n\n      return {\n        ...component,\n        version,\n        versionMode\n      };\n    })\n    .filter((component) => allDependenciesKeys.has(component.package)) as HeroUIComponents;\n  const isAllComponents = allDependenciesKeys.has(HERO_UI);\n\n  return {\n    allDependencies,\n    allDependenciesKeys,\n    currentComponents,\n    dependencies,\n    devDependencies,\n    isAllComponents,\n    packageJson: pkg\n  };\n}\n\nexport function transformComponentsToPackage(components: string[]) {\n  return components.map((component) => {\n    const herouiComponent = store.heroUIComponentsMap[component];\n    const packageName = herouiComponent?.package;\n\n    return packageName ? packageName : component;\n  });\n}\n\n/**\n * Get the package detail information\n * @param components need package name\n * @param allDependencies\n * @returns\n */\nexport async function transformPackageDetail(\n  components: string[],\n  allDependencies: Record<string, string>,\n  transformVersion = true\n): Promise<HeroUIComponents> {\n  const result: HeroUIComponents = [];\n\n  for (const component of components) {\n    let {currentVersion} = getVersionAndMode(allDependencies, component);\n    const {versionMode} = getVersionAndMode(allDependencies, component);\n    const docs = (\n      ((await getCacheExecData(`npm show ${component} homepage`)) || '') as string\n    ).replace(/\\n/, '');\n    const description = (\n      ((await getCacheExecData(`npm show ${component} description`)) || '') as string\n    ).replace(/\\n/, '');\n    const latestVersion =\n      store.heroUIComponentsPackageMap[component]?.version || (await getLatestVersion(component));\n\n    currentVersion = transformVersion ? `${currentVersion} new: ${latestVersion}` : currentVersion;\n\n    const detailPackageInfo: HeroUIComponents[0] = {\n      description: description || '',\n      docs: docs || '',\n      name: component,\n      package: component,\n      peerDependencies: {},\n      status: 'stable',\n      style: '',\n      version: currentVersion,\n      versionMode: versionMode\n    };\n\n    result.push(detailPackageInfo);\n  }\n\n  return result;\n}\n\n/**\n * Get the complete version\n * @example getCompleteVersion({latestVersion: '1.0.0', versionMode: '^'}) --> '^1.0.0'\n */\nexport function getCompleteVersion(upgradeOption: UpgradeOption) {\n  return `${upgradeOption.versionMode || ''}${upgradeOption.latestVersion.replace(\n    colorMatchRegex,\n    ''\n  )}`;\n}\n","import type {Agent} from './detect';\nimport type {PascalCase, SAFE_ANY} from './type';\n\nimport chalk from 'chalk';\nimport {compareVersions} from 'compare-versions';\nimport fg, {type Options} from 'fast-glob';\n\nimport {ROOT} from 'src/constants/path';\n\nimport {Logger} from './logger';\nimport {colorMatchRegex} from './output-info';\n\nexport const versionModeRegex = /([\\^~])/;\n\nexport function getCommandDescAndLog(log: string, desc: string) {\n  Logger.gradient(log);\n\n  return desc;\n}\n\n/**\n * Convert a string to PascalCase.\n * @example 'test-test' => 'TestTest'\n * @param str\n */\nexport function PasCalCase<T extends string>(str: T) {\n  return str\n    .split('-')\n    .map((s) => s.charAt(0).toUpperCase() + s.slice(1))\n    .join('') as PascalCase<T>;\n}\n\n/**\n * Find files by glob pattern.\n * @param glob\n * @param options\n */\nexport const findFiles = (glob: string, options?: Options) => {\n  const file = fg.sync(glob, {\n    absolute: true,\n    cwd: ROOT,\n    deep: 5,\n    ignore: ['node_modules/**', 'dist/**', 'build/**', 'coverage/**', 'public/**', 'out/**'],\n    onlyFiles: true,\n    ...options\n  });\n\n  return file;\n};\n\nexport function transformOption(options: boolean | 'false') {\n  if (options === 'false') return false;\n\n  return !!options;\n}\n\nexport function omit(obj: Record<string, SAFE_ANY>, keys: string[]) {\n  return Object.fromEntries(Object.entries(obj).filter(([key]) => !keys.includes(key)));\n}\n\nexport function getUpgradeType({\n  major,\n  minor,\n  patch\n}: {\n  major: boolean;\n  minor: boolean;\n  patch: boolean;\n}) {\n  if (major) return 'major';\n  if (minor) return 'minor';\n  if (patch) return 'patch';\n\n  return 'minor';\n}\n\nexport function getColorVersion(currentVersion: string, latestVersion: string) {\n  currentVersion = transformPeerVersion(currentVersion);\n  latestVersion = transformPeerVersion(latestVersion);\n\n  if (isMajorUpdate(currentVersion, latestVersion)) {\n    return isMajorUpdate(currentVersion, latestVersion);\n  } else if (isMinorUpdate(currentVersion, latestVersion)) {\n    return isMinorUpdate(currentVersion, latestVersion);\n  } else if (isPatchUpdate(currentVersion, latestVersion)) {\n    return isPatchUpdate(currentVersion, latestVersion);\n  }\n\n  return latestVersion;\n}\n\nexport function isMajorUpdate(currentVersion: string, latestVersion: string) {\n  const currentVersionArr = currentVersion.split('.');\n  const latestVersionArr = latestVersion.split('.');\n\n  if (currentVersionArr[0] !== latestVersionArr[0]) {\n    return chalk.redBright(latestVersionArr.join('.'));\n  }\n\n  return '';\n}\n\nexport function isMinorUpdate(currentVersion: string, latestVersion: string) {\n  const currentVersionArr = currentVersion.split('.');\n  const latestVersionArr = latestVersion.split('.');\n\n  if (currentVersionArr[1] !== latestVersionArr[1]) {\n    return `${chalk.white(latestVersionArr[0])}${chalk.white('.')}${chalk.cyanBright(\n      latestVersionArr.slice(1).join('.')\n    )}`;\n  }\n\n  return '';\n}\n\nexport function isPatchUpdate(currentVersion: string, latestVersion: string) {\n  const currentVersionArr = currentVersion.split('.');\n  const latestVersionArr = latestVersion.split('.');\n\n  if (currentVersionArr[2] !== latestVersionArr[2]) {\n    return `${chalk.white(latestVersionArr.slice(0, 2).join('.'))}${chalk.white(\n      '.'\n    )}${chalk.greenBright(latestVersionArr.slice(2).join('.'))}`;\n  }\n\n  return '';\n}\n\nexport function getVersionAndMode(allDependencies: Record<string, SAFE_ANY>, packageName: string) {\n  const currentVersion = allDependencies[packageName].replace(versionModeRegex, '');\n  const versionMode = allDependencies[packageName].match(versionModeRegex)?.[1] || '';\n\n  return {\n    currentVersion,\n    versionMode\n  };\n}\n\nexport function getPackageManagerInfo<T extends Agent = Agent>(packageManager: T) {\n  const packageManagerInfo = {\n    bun: {\n      install: 'add',\n      remove: 'remove',\n      run: 'run'\n    },\n    npm: {\n      install: 'install',\n      remove: 'uninstall',\n      run: 'run'\n    },\n    pnpm: {\n      install: 'add',\n      remove: 'remove',\n      run: 'run'\n    },\n    yarn: {\n      install: 'add',\n      remove: 'remove',\n      run: 'run'\n    }\n  } as const;\n\n  return packageManagerInfo[packageManager] as (typeof packageManagerInfo)[T];\n}\n\n/**\n * @example transformPeerVersion('>=1.0.0') // '1.0.0'\n * @example transformPeerVersion(\">=11.5.6 || >=12.0.0-alpha.1\") // 11.5.6\n * @param version\n */\nexport function transformPeerVersion(version: string, isLatest = false) {\n  const ranges = version.split('||').map((r) => r.trim());\n  const result = ranges\n    .map((range) => {\n      return range.replace(/^[<=>^~]+\\s*/, '').trim();\n    })\n    .sort((a, b) => {\n      if (isLatest) {\n        return compareVersions(b, a);\n      }\n\n      return compareVersions(a, b);\n    });\n\n  return result[0]!;\n}\n\nexport function fillAnsiLength(str: string, length: number) {\n  const stripStr = str.replace(colorMatchRegex, '');\n  const fillSpace = length - stripStr.length > 0 ? ' '.repeat(length - stripStr.length) : '';\n\n  return `${str}${fillSpace}`;\n}\n\nexport function strip(str: string) {\n  return str.replace(colorMatchRegex, '');\n}\n","import type {ExtractStoreData, SAFE_ANY} from '@helpers/type';\n\nimport {getBetaVersion} from '@helpers/beta';\nimport {type Components, getLatestVersion} from 'src/scripts/helpers';\n\nimport {HEROUI_CLI, HERO_UI} from './required';\n\nexport type HeroUIComponentsMap = Record<string, Components[0]>;\n\nexport type Store = {\n  debug: boolean;\n  beta: boolean;\n  cliLatestVersion: string;\n  latestVersion: string;\n  betaVersion: string;\n\n  // HeroUI\n  heroUIComponents: Components;\n  heroUIComponentsKeys: string[];\n  heroUIcomponentsPackages: string[];\n  heroUIComponentsKeysSet: Set<string>;\n  heroUIComponentsMap: HeroUIComponentsMap;\n  heroUIComponentsPackageMap: HeroUIComponentsMap;\n\n  // Beta HeroUI\n  betaHeroUIComponents: Components;\n  betaHeroUIIComponentsKeys: string[];\n  betaHeroUIcomponentsPackages: string[];\n  betaHeroUIComponentsKeysSet: Set<string>;\n  betaHeroUIComponentsMap: HeroUIComponentsMap;\n  betaHeroUIComponentsPackageMap: HeroUIComponentsMap;\n};\n\n/* eslint-disable sort-keys-fix/sort-keys-fix, sort-keys */\nexport const store = {\n  debug: false,\n  beta: false,\n  cliLatestVersion: '',\n  latestVersion: '',\n  betaVersion: '',\n\n  betaHeroUIComponents: [],\n  betaHeroUIIComponentsKeys: [],\n  betaHeroUIComponentsKeysSet: new Set(),\n  betaHeroUIComponentsMap: {},\n  betaHeroUIComponentsPackageMap: {},\n  betaHeroUIcomponentsPackages: [],\n\n  heroUIComponents: [],\n  heroUIComponentsKeys: [],\n  heroUIComponentsKeysSet: new Set(),\n  heroUIComponentsMap: {},\n  heroUIComponentsPackageMap: {},\n  heroUIcomponentsPackages: []\n} as Store;\n/* eslint-enable sort-keys-fix/sort-keys-fix, sort-keys */\n\nexport type StoreKeys = keyof Store;\n\nexport async function getStore<T extends StoreKeys = StoreKeys>(\n  key: T\n): Promise<ExtractStoreData<T>> {\n  let data = store[key];\n\n  if (!data) {\n    if (key === 'latestVersion') {\n      data = (await getLatestVersion(HERO_UI)) as SAFE_ANY;\n\n      store[key] = data;\n    } else if (key === 'cliLatestVersion') {\n      data = (await getLatestVersion(HEROUI_CLI)) as SAFE_ANY;\n\n      store[key] = data;\n    } else if (key === 'betaVersion') {\n      data = (await getBetaVersion(HERO_UI)) as SAFE_ANY;\n\n      store[key] = data;\n    }\n  }\n\n  return data as unknown as Promise<ExtractStoreData<T>>;\n}\n\nexport function getStoreSync<T extends StoreKeys = StoreKeys>(key: T) {\n  return store[key] as unknown as ExtractStoreData<T>;\n}\n","import type {Components} from 'src/scripts/helpers';\n\nimport {store} from './store';\n\nexport function getHerouiComponentsData(heroUIComponents: Components) {\n  const heroUIComponentsKeys = heroUIComponents.map((component) => component.name);\n  const heroUIcomponentsPackages = heroUIComponents.map((component) => component.package);\n\n  const heroUIComponentsKeysSet = new Set(heroUIComponentsKeys);\n\n  const heroUIComponentsMap = heroUIComponents.reduce((acc, component) => {\n    acc[component.name] = component;\n\n    return acc;\n  }, {} as HeroUIComponentsMap);\n  const heroUIComponentsPackageMap = heroUIComponents.reduce((acc, component) => {\n    acc[component.package] = component;\n\n    return acc;\n  }, {} as HeroUIComponentsMap);\n\n  return {\n    heroUIComponentsKeys,\n    heroUIComponentsKeysSet,\n    heroUIComponentsMap,\n    heroUIComponentsPackageMap,\n    heroUIcomponentsPackages\n  };\n}\n\nexport function initStoreComponentsData({\n  beta,\n  heroUIComponents\n}: {\n  beta: boolean;\n  heroUIComponents: Components;\n}) {\n  const {\n    heroUIComponentsKeys,\n    heroUIComponentsKeysSet,\n    heroUIComponentsMap,\n    heroUIComponentsPackageMap,\n    heroUIcomponentsPackages\n  } = getHerouiComponentsData(heroUIComponents);\n\n  if (beta) {\n    store.betaHeroUIComponents = heroUIComponents;\n    store.betaHeroUIIComponentsKeys = heroUIComponentsKeys;\n    store.betaHeroUIComponentsKeysSet = heroUIComponentsKeysSet;\n    store.betaHeroUIComponentsMap = heroUIComponentsMap;\n    store.betaHeroUIComponentsPackageMap = heroUIComponentsPackageMap;\n    store.betaHeroUIcomponentsPackages = heroUIcomponentsPackages;\n  } else {\n    store.heroUIComponents = heroUIComponents;\n    store.heroUIComponentsKeys = heroUIComponentsKeys;\n    store.heroUIComponentsKeysSet = heroUIComponentsKeysSet;\n    store.heroUIComponentsMap = heroUIComponentsMap;\n    store.heroUIComponentsPackageMap = heroUIComponentsPackageMap;\n    store.heroUIcomponentsPackages = heroUIcomponentsPackages;\n  }\n}\n\nexport type HeroUIComponentsMap = Record<string, (typeof store.heroUIComponents)[number]>;\n\nexport const orderHeroUIComponentKeys = ['package', 'version', 'status', 'docs'] as const;\n\nexport const colorHeroUIComponentKeys = ['package', 'version', 'status'];\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type HeroUIComponentStatus = 'stable' | 'updated' | 'new' | (string & {});\n\nexport type HeroUIComponent = (typeof store.heroUIComponents)[0];\n\nexport type HeroUIComponents = (Omit<HeroUIComponent, 'status'> & {\n  status: HeroUIComponentStatus;\n  versionMode: string;\n})[];\n","{\n  \"name\": \"heroui-cli\",\n  \"private\": false,\n  \"type\": \"module\",\n  \"license\": \"MIT\",\n  \"version\": \"1.0.0\",\n  \"homepage\": \"https://github.com/heroui-inc/heroui-cli#readme\",\n  \"description\": \"A CLI tool that unlocks seamless HeroUI integration (Previously NextUI CLI)\",\n  \"keywords\": [\n    \"UI\",\n    \"CLI\",\n    \"Tool\",\n    \"NextUI\",\n    \"Template\",\n    \"Integration\",\n    \"Add Component\",\n    \"HeroUI\"\n  ],\n  \"author\": {\n    \"name\": \"HeroUI\",\n    \"email\": \"support@heroui.com\",\n    \"url\": \"https://github.com/heroui-inc\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/heroui-inc/heroui-cli.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/heroui-inc/heroui-cli/issues\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\",\n    \"registry\": \"https://registry.npmjs.org/\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"bin\": {\n    \"heroui\": \"./dist/index.js\"\n  },\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"scripts\": {\n    \"dev\": \"tsup --watch\",\n    \"link:cli\": \"pnpm link --global\",\n    \"link:remove\": \"pnpm uninstall --global heroui-cli\",\n    \"build\": \"tsup\",\n    \"update:components\": \"tsx src/scripts/update/update-components.ts\",\n    \"sync:docs\": \"tsx src/scripts/sync/sync.ts\",\n    \"clean:cache\": \"tsx src/scripts/cache/clean.ts\",\n    \"lint\": \"eslint . --max-warnings=0\",\n    \"lint:fix\": \"eslint . --max-warnings=0 --fix\",\n    \"check:prettier\": \"prettier --check .\",\n    \"check:types\": \"tsc --noEmit\",\n    \"changelog\": \"npx conventional-changelog -p angular -i CHANGELOG.md -s --commit-path .\",\n    \"release\": \"bumpp --execute='pnpm run changelog' --all\",\n    \"prepare\": \"husky install\",\n    \"postbuild\": \"pnpm run update:components\",\n    \"prepublishOnly\": \"pnpm run build\"\n  },\n  \"dependencies\": {\n    \"@clack/prompts\": \"0.7.0\",\n    \"@winches/prompts\": \"0.0.7\",\n    \"async-retry\": \"1.3.3\",\n    \"chalk\": \"5.3.0\",\n    \"commander\": \"11.0.0\",\n    \"compare-versions\": \"6.1.1\",\n    \"fast-glob\": \"3.3.2\",\n    \"find-up\": \"7.0.0\",\n    \"gradient-string\": \"2.0.2\",\n    \"ora\": \"8.0.1\",\n    \"pathe\": \"1.1.2\",\n    \"tar\": \"6.2.1\"\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"17.7.1\",\n    \"@commitlint/config-conventional\": \"17.7.0\",\n    \"@types/gradient-string\": \"1.1.3\",\n    \"@types/node\": \"20.11.30\",\n    \"@typescript-eslint/eslint-plugin\": \"6.7.2\",\n    \"@typescript-eslint/parser\": \"6.7.2\",\n    \"bumpp\": \"9.4.0\",\n    \"clean-package\": \"2.2.0\",\n    \"commitlint-plugin-function-rules\": \"2.0.2\",\n    \"conventional-changelog-cli\": \"4.1.0\",\n    \"eslint\": \"8.50.0\",\n    \"eslint-config-prettier\": \"9.0.0\",\n    \"eslint-import-resolver-typescript\": \"3.6.1\",\n    \"eslint-plugin-import\": \"2.28.1\",\n    \"eslint-plugin-prettier\": \"5.0.0\",\n    \"eslint-plugin-sort-destructure-keys\": \"1.5.0\",\n    \"eslint-plugin-sort-keys-fix\": \"1.1.2\",\n    \"eslint-plugin-unicorn\": \"52.0.0\",\n    \"eslint-plugin-unused-imports\": \"3.0.0\",\n    \"husky\": \"8.0.3\",\n    \"lint-staged\": \"14.0.1\",\n    \"prettier\": \"3.3.2\",\n    \"tsup\": \"7.2.0\",\n    \"tsx\": \"4.7.1\",\n    \"typescript\": \"5.2.2\"\n  },\n  \"engines\": {\n    \"pnpm\": \">=9.x\"\n  },\n  \"packageManager\": \"pnpm@9.6.0\"\n}\n","/* eslint-disable no-var */\nimport type {SAFE_ANY} from '@helpers/type';\n\nimport {existsSync, writeFileSync} from 'node:fs';\n\nimport chalk from 'chalk';\n\nimport {getBetaComponents} from '@helpers/beta';\nimport {\n  checkApp,\n  checkIllegalComponents,\n  checkPnpm,\n  checkRequiredContentInstalled,\n  checkTailwind\n} from '@helpers/check';\nimport {debugAddedPkg, debugExecAddAction, debugRemovedPkg} from '@helpers/debug';\nimport {detect} from '@helpers/detect';\nimport {fixPnpm, fixProvider, fixTailwind} from '@helpers/fix';\nimport {Logger} from '@helpers/logger';\nimport {getPackageInfo} from '@helpers/package';\nimport {findFiles, strip} from '@helpers/utils';\nimport {resolver} from 'src/constants/path';\nimport {\n  DOCS_PROVIDER_SETUP,\n  HERO_UI,\n  individualTailwindRequired,\n  pnpmRequired\n} from 'src/constants/required';\nimport {getStoreSync, store} from 'src/constants/store';\nimport {tailwindTemplate} from 'src/constants/templates';\nimport {getAutocompleteMultiselect} from 'src/prompts';\n\ninterface AddActionOptions {\n  all?: boolean;\n  prettier?: boolean;\n  packagePath?: string;\n  tailwindPath?: string;\n  appPath?: string;\n  addApp?: boolean;\n  beta?: boolean;\n}\n\nexport async function addAction(components: string[], options: AddActionOptions) {\n  const {\n    addApp = false,\n    all = false,\n    appPath,\n    beta = false,\n    packagePath = resolver('package.json'),\n    tailwindPath = findFiles('**/tailwind.config.(j|t)s')[0]\n  } = options;\n\n  var {allDependencies, allDependenciesKeys, currentComponents} = getPackageInfo(packagePath);\n  const prettier = options.prettier ?? allDependenciesKeys.has('prettier');\n\n  const isHeroUIAll = !!allDependencies[HERO_UI];\n\n  if (!components.length && !all) {\n    const filteredComponents = store.heroUIComponents.filter(\n      (component) =>\n        !currentComponents.some((currentComponent) => currentComponent.name === component.name)\n    );\n\n    if (!filteredComponents.length) {\n      Logger.success('✅ All components have been added');\n      process.exit(0);\n    }\n\n    components = await getAutocompleteMultiselect(\n      'Which components would you like to add?',\n      filteredComponents.map((component) => {\n        return {\n          description: component.description,\n          title: component.name,\n          value: component.name\n        };\n      })\n    );\n  } else if (all) {\n    components = [HERO_UI];\n  }\n\n  /** ======================== Add judge whether illegal component exist ======================== */\n  if (!all && !checkIllegalComponents(components, true)) {\n    return;\n  }\n\n  // Check whether have added the HeroUI components\n  var {allDependenciesKeys, currentComponents} = getPackageInfo(packagePath);\n\n  const currentComponentsKeys = currentComponents.map((c) => c.name);\n  const filterCurrentComponents = components.filter(\n    (c) => currentComponentsKeys.includes(c) || (isHeroUIAll && c === HERO_UI)\n  );\n\n  if (filterCurrentComponents.length && !getStoreSync('debug')) {\n    Logger.prefix(\n      'error',\n      `❌ You have already added the following components: ${filterCurrentComponents\n        .map((c) => chalk.underline(c))\n        .join(', ')}`\n    );\n\n    return;\n  }\n\n  // Check whether the App.tsx file exists\n  if (addApp && !appPath) {\n    Logger.prefix(\n      'error',\n      \"❌ App.(j|t)sx file not found. Please specify the appPath if the default search path does not locate your file.  'add --appPath=yourAppPath'\"\n    );\n\n    return;\n  }\n\n  const currentPkgManager = await detect();\n  const runCmd = currentPkgManager === 'npm' ? 'install' : 'add';\n\n  /** ======================== Step 1 Add dependencies required ======================== */\n  if (all) {\n    let [, ...missingDependencies] = await checkRequiredContentInstalled(\n      'all',\n      allDependenciesKeys,\n      {allDependencies, beta, packageNames: [HERO_UI], peerDependencies: true}\n    );\n\n    missingDependencies = missingDependencies.map((c) => strip(c));\n\n    if (missingDependencies.length) {\n      Logger.info(\n        `Adding required dependencies: ${[...missingDependencies]\n          .map((c) => chalk.underline(c))\n          .join(', ')}`\n      );\n\n      await debugExecAddAction(\n        `${currentPkgManager} ${runCmd} ${[...missingDependencies].join(' ')}`,\n        missingDependencies\n      );\n    }\n  } else {\n    const mergedComponents = beta\n      ? await getBetaComponents(components)\n      : components.map((c) => store.heroUIComponentsMap[c]!.package);\n    const [, ..._missingDependencies] = await checkRequiredContentInstalled(\n      'partial',\n      allDependenciesKeys,\n      {\n        allDependencies,\n        beta,\n        packageNames: mergedComponents,\n        peerDependencies: true\n      }\n    );\n    const missingDependencies = [..._missingDependencies, ...mergedComponents].map((c) => strip(c));\n\n    Logger.info(\n      `Adding required dependencies: ${[...missingDependencies]\n        .map((c) => chalk.underline(c))\n        .join(', ')}`\n    );\n\n    await debugExecAddAction(\n      `${currentPkgManager} ${runCmd} ${[...missingDependencies].join(' ')}`,\n      missingDependencies\n    );\n  }\n\n  if (getStoreSync('debug')) {\n    // Temporarily add the components to the package.json file\n    debugAddedPkg(components, packagePath);\n  }\n\n  // After install the required dependencies, get the latest package information\n  var {allDependenciesKeys, currentComponents} = getPackageInfo(packagePath);\n\n  /** ======================== Step 2 Tailwind CSS Setup ======================== */\n  const type: SAFE_ANY = all ? 'all' : 'partial';\n\n  const isPnpm = currentPkgManager === 'pnpm';\n\n  if (!tailwindPath) {\n    const individualContent = individualTailwindRequired.content(currentComponents, isPnpm);\n    const template = tailwindTemplate(type, individualContent);\n    const tailwindPath = resolver('tailwind.config.js');\n\n    writeFileSync(tailwindPath, template, 'utf-8');\n\n    Logger.newLine();\n    Logger.info(`Tailwind CSS configuration file created at: ${tailwindPath}`);\n  } else {\n    const [, ...errorInfoList] = checkTailwind(\n      type,\n      tailwindPath,\n      currentComponents,\n      isPnpm,\n      undefined,\n      true\n    );\n\n    fixTailwind(type, {errorInfoList, format: prettier, tailwindPath});\n\n    Logger.newLine();\n    Logger.log(`Tailwind CSS settings have been updated in: ${tailwindPath}`);\n  }\n\n  /** ======================== Step 3 Provider Need Manually Open ======================== */\n  if (addApp && appPath && existsSync(appPath)) {\n    const [isCorrectProvider] = checkApp(type, appPath);\n\n    if (!isCorrectProvider) {\n      fixProvider(appPath, {format: prettier});\n\n      Logger.newLine();\n      Logger.info(`HeroUIProvider successfully added to the App file at: ${appPath}`);\n      Logger.warn(\n        \"Please check the placement of HeroUIProvider in the App file to ensure it's correctly integrated.'\"\n      );\n    }\n  }\n\n  /** ======================== Step 4 Setup Pnpm ======================== */\n  if (currentPkgManager === 'pnpm') {\n    const npmrcPath = resolver('.npmrc');\n\n    if (!existsSync(npmrcPath)) {\n      writeFileSync(resolver('.npmrc'), pnpmRequired.content, 'utf-8');\n    } else {\n      const [isCorrectPnpm] = checkPnpm(npmrcPath);\n\n      if (!isCorrectPnpm) {\n        fixPnpm(npmrcPath);\n      }\n    }\n  }\n\n  // Finish adding the HeroUI components\n  Logger.newLine();\n  Logger.success('✅ Components added successfully');\n\n  // Check whether the user has installed the All HeroUI components\n  if ((allDependenciesKeys.has(HERO_UI) || all) && currentComponents.length) {\n    // Check whether have added redundant dependencies\n    Logger.newLine();\n    Logger.log(\n      `${chalk.yellow('Attention')} Individual components from HeroUI do not require the \\`@heroui/react\\` package. For optimized bundle sizes, consider using individual components.`\n    );\n    Logger.log('The redundant dependencies are:');\n    [...new Set(currentComponents)].forEach((component) => {\n      Logger.log(`- ${component.package}`);\n    });\n  }\n\n  // Warn the user to check the HeroUIProvider whether in the correct place\n  Logger.newLine();\n  Logger.grey(\n    `Please check the ${chalk.bold(\n      'HeroUIProvider'\n    )} whether in the correct place (ignore if added)\\nSee more info here: ${DOCS_PROVIDER_SETUP}`\n  );\n\n  if (getStoreSync('debug')) {\n    // Temporarily remove the added components from the package.json file\n    debugRemovedPkg(components, packagePath);\n  }\n  process.exit(0);\n}\n","import type {PartialKey, RequiredKey, SAFE_ANY} from './type';\nimport type {ProblemRecord} from 'src/actions/doctor-action';\n\nimport {readFileSync} from 'node:fs';\n\nimport chalk from 'chalk';\n\nimport {type HeroUIComponents} from 'src/constants/component';\nimport {\n  DOCS_INSTALLED,\n  DOCS_TAILWINDCSS_SETUP,\n  FRAMER_MOTION,\n  HERO_UI,\n  SYSTEM_UI,\n  TAILWINDCSS,\n  THEME_UI,\n  appRequired,\n  individualTailwindRequired,\n  pnpmRequired,\n  tailwindRequired\n} from 'src/constants/required';\nimport {store} from 'src/constants/store';\nimport {compareVersions} from 'src/scripts/helpers';\n\nimport {getBetaVersionData} from './beta';\nimport {Logger} from './logger';\nimport {getMatchArray, getMatchImport} from './match';\nimport {findMostMatchText} from './math-diff';\nimport {getPackagePeerDep} from './upgrade';\nimport {strip} from './utils';\n\nexport type CheckType = 'all' | 'partial';\nexport type CombineType = 'missingDependencies' | 'incorrectTailwind' | 'incorrectApp';\n\ntype DefaultCombineOptions = {\n  errorInfo: string[];\n  missingDependencies: string[];\n  tailwindName: string;\n};\n\ntype CombineOptions<T extends CombineType> = T extends 'missingDependencies'\n  ? RequiredKey<Partial<DefaultCombineOptions>, 'missingDependencies'>\n  : T extends 'incorrectTailwind'\n    ? RequiredKey<Partial<DefaultCombineOptions>, 'errorInfo' | 'tailwindName'>\n    : T extends 'incorrectApp'\n      ? RequiredKey<Partial<DefaultCombineOptions>, 'errorInfo'>\n      : DefaultCombineOptions;\n\ntype CheckResult<T extends SAFE_ANY[] = SAFE_ANY[]> = [boolean, ...T];\n\nexport function combineProblemRecord<T extends CombineType = CombineType>(\n  type: T,\n  options: CombineOptions<T>\n): ProblemRecord {\n  const {errorInfo, missingDependencies, tailwindName} = options as DefaultCombineOptions;\n\n  if (type === 'missingDependencies') {\n    return {\n      level: 'error',\n      name: 'missingDependencies',\n      outputFn: () => {\n        Logger.log('You have not installed the required dependencies');\n        Logger.newLine();\n        Logger.log('The required dependencies are:');\n        missingDependencies.forEach((dependency) => {\n          Logger.log(`- ${dependency}`);\n        });\n        Logger.newLine();\n        Logger.log(`See more info here: ${chalk.underline(DOCS_INSTALLED)}`);\n      }\n    };\n  } else if (type === 'incorrectTailwind') {\n    return {\n      level: 'error',\n      name: 'incorrectTailwind',\n      outputFn: () => {\n        Logger.log(`Your ${tailwindName} is incorrect`);\n        Logger.newLine();\n        Logger.log('The missing part is:');\n        errorInfo.forEach((info) => {\n          Logger.log(`- need to add ${info}`);\n        });\n        Logger.newLine();\n        Logger.log(`See more info here: ${chalk.underline(`${DOCS_TAILWINDCSS_SETUP}-1`)}`);\n      }\n    };\n  } else {\n    return {\n      level: 'error',\n      name: 'incorrectApp',\n      outputFn: () => {\n        Logger.log('Your App.tsx is incorrect');\n        Logger.newLine();\n        Logger.log('The missing part is:');\n        errorInfo.forEach((info) => {\n          Logger.log(`- need to add ${info}`);\n        });\n        Logger.newLine();\n        Logger.log(`See more info here: ${chalk.underline(DOCS_INSTALLED)}`);\n      }\n    };\n  }\n}\n\ninterface CheckPeerDependenciesConfig {\n  peerDependencies?: boolean;\n  allDependencies?: Record<string, SAFE_ANY>;\n  packageNames?: string[];\n  beta?: boolean;\n}\n\n/**\n * Check if the required content is installed\n * @example return result and missing required [false, '@heroui/react', 'framer-motion']\n * @param type\n * @param dependenciesKeys\n * @param checkPeerDependenciesConfig\n * @returns\n */\nexport async function checkRequiredContentInstalled<\n  T extends CheckPeerDependenciesConfig = CheckPeerDependenciesConfig\n>(\n  type: CheckType,\n  dependenciesKeys: Set<string>,\n  checkPeerDependenciesConfig?: T extends {peerDependencies: infer P}\n    ? P extends true\n      ? PartialKey<Required<CheckPeerDependenciesConfig>, 'beta'>\n      : T\n    : T\n): Promise<CheckResult> {\n  const result = [] as unknown as CheckResult;\n  const {allDependencies, beta, packageNames, peerDependencies} = (checkPeerDependenciesConfig ??\n    {}) as Required<CheckPeerDependenciesConfig>;\n  const peerDependenciesList: string[] = [];\n\n  if (peerDependencies) {\n    const peerDepList = await checkPeerDependencies({allDependencies, packageNames});\n\n    peerDependenciesList.push(...peerDepList);\n  }\n\n  if (type === 'all') {\n    const hasAllComponents = dependenciesKeys.has(HERO_UI);\n    const hasFramerMotion = dependenciesKeys.has(FRAMER_MOTION);\n    const hasTailwind = dependenciesKeys.has(TAILWINDCSS);\n\n    if (hasAllComponents && hasFramerMotion && !peerDependenciesList.length) {\n      return [true];\n    }\n    !hasAllComponents && result.push(beta ? `${HERO_UI}@${store.betaVersion}` : HERO_UI);\n    !hasFramerMotion && result.push(FRAMER_MOTION);\n    !hasTailwind && result.push(TAILWINDCSS);\n  } else if (type === 'partial') {\n    const hasFramerMotion = dependenciesKeys.has(FRAMER_MOTION);\n    const hasTailwind = dependenciesKeys.has(TAILWINDCSS);\n    const hasSystemUI = dependenciesKeys.has(SYSTEM_UI);\n    const hasThemeUI = dependenciesKeys.has(THEME_UI);\n\n    if (hasFramerMotion && hasSystemUI && hasThemeUI && !peerDependenciesList.length) {\n      return [true];\n    }\n    !hasFramerMotion && result.push(FRAMER_MOTION);\n    const betaSystemUI = await getBetaVersionData(SYSTEM_UI);\n    const betaThemeUI = await getBetaVersionData(THEME_UI);\n\n    !hasSystemUI && result.push(beta ? `${SYSTEM_UI}@${betaSystemUI}` : SYSTEM_UI);\n    !hasThemeUI && result.push(beta ? `${THEME_UI}@${betaThemeUI}` : THEME_UI);\n    !hasTailwind && result.push(TAILWINDCSS);\n  }\n\n  return [false, ...result, ...(peerDependencies ? peerDependenciesList : [])];\n}\n\nexport async function checkPeerDependencies(\n  config: Required<Pick<CheckPeerDependenciesConfig, 'allDependencies' | 'packageNames'>>\n) {\n  const {allDependencies, packageNames} = config;\n  const peerDepList: string[] = [];\n\n  for (const packageName of packageNames) {\n    const result = await getPackagePeerDep(packageName, allDependencies, new Set());\n\n    for (const peerData of result) {\n      if (!peerData.isLatest) {\n        // If there are not the latest version, add the peerDependencies to the list\n        const findPeerDepIndex = peerDepList.findIndex((peerDep) =>\n          peerDep.includes(peerData.package)\n        );\n        const findPeerDep = strip(peerDepList[findPeerDepIndex] || '');\n        const findPeerDepVersion = findPeerDep?.match(/@([\\d.]+)/)?.[1];\n\n        // If the peerDependencies is not the latest version, remove the old version and add the latest version\n        if (\n          findPeerDepVersion &&\n          compareVersions(findPeerDepVersion, strip(peerData.latestVersion)) <= 0\n        ) {\n          peerDepList.splice(findPeerDepIndex, 1);\n        }\n        peerDepList.push(`${peerData.package}@${peerData.latestVersion}`);\n      }\n    }\n  }\n\n  return peerDepList;\n}\n\n/**\n * Check if the tailwind.config file is correct\n * @param type\n * @param tailwindPath\n * @param currentComponents\n * @returns\n */\nexport function checkTailwind(\n  type: 'all',\n  tailwindPath: string,\n  currentComponents?: HeroUIComponents,\n  isPnpm?: boolean,\n  content?: string,\n  logWarning?: boolean\n): CheckResult;\nexport function checkTailwind(\n  type: 'partial',\n  tailwindPath: string,\n  currentComponents: HeroUIComponents,\n  isPnpm: boolean,\n  content?: string,\n  logWarning?: boolean\n): CheckResult;\nexport function checkTailwind(\n  type: CheckType,\n  tailwindPath: string,\n  currentComponents?: HeroUIComponents,\n  isPnpm?: boolean,\n  content?: string,\n  logWarning?: boolean\n): CheckResult {\n  if (type === 'partial' && !currentComponents!.length) {\n    return [true];\n  }\n\n  const result = [] as unknown as CheckResult;\n\n  const tailwindContent = content ?? readFileSync(tailwindPath, 'utf-8');\n\n  const contentMatch = getMatchArray('content', tailwindContent);\n  const pluginsMatch = getMatchArray('plugins', tailwindContent);\n\n  if (type === 'all') {\n    // Check if the required content is added Detail: https://heroui.com/docs/guide/installation#global-installation\n    const darkMatch = getMatchArray('darkMode', tailwindContent);\n    // Some tailwind.config.js use darkMode: 'class' not darkMode: ['class']\n    const isDarkModeCorrect =\n      darkMatch.some((darkMode) => darkMode.includes('class')) ||\n      /darkMode:\\s*[\"'`]class/.test(tailwindContent);\n    const isContentCorrect = contentMatch.some((content) =>\n      content.includes(tailwindRequired.content)\n    );\n    const isPluginsCorrect = pluginsMatch.some((plugins) =>\n      tailwindRequired.checkPluginsRegex.test(plugins)\n    );\n\n    if (isDarkModeCorrect && isContentCorrect && isPluginsCorrect) {\n      return [true];\n    }\n    !isDarkModeCorrect && result.push(tailwindRequired.darkMode);\n    !isContentCorrect && result.push(tailwindRequired.content);\n    !isPluginsCorrect && result.push(tailwindRequired.plugins);\n  } else if (type === 'partial') {\n    const individualContent = individualTailwindRequired.content(currentComponents!, isPnpm!);\n\n    let isHaveAllContent = false;\n    const isContentCorrect = contentMatch.some((content) => {\n      // Add tailwindRequired.content check to the contentMatch, cause it is all include in the individualContent\n      if (content.includes(tailwindRequired.content)) {\n        isHaveAllContent = true;\n\n        return true;\n      }\n\n      return content.includes(individualContent);\n    });\n\n    if (logWarning && isHaveAllContent) {\n      Logger.log(\n        `\\n${chalk.yellow('Attention')} Individual components from HeroUI do not require the \"${chalk.bold(\n          tailwindRequired.content\n        )}\" in the tailwind config\\nFor optimized bundle sizes, consider using \"${chalk.bold(\n          individualContent\n        )}\" instead`\n      );\n    }\n\n    const isPluginsCorrect = pluginsMatch.some((plugins) =>\n      tailwindRequired.checkPluginsRegex.test(plugins)\n    );\n\n    if (isContentCorrect && isPluginsCorrect) {\n      return [true];\n    }\n    !isContentCorrect && result.push(individualContent);\n    !isPluginsCorrect && result.push(tailwindRequired.plugins);\n  }\n\n  return [false, ...result];\n}\n\nexport function checkApp(type: CheckType, appPath: string): CheckResult {\n  const result = [] as unknown as CheckResult;\n\n  if (type === 'all' || type === 'partial') {\n    const appContent = readFileSync(appPath, 'utf-8');\n\n    const importArray = getMatchImport(appContent);\n    const isAppCorrect = importArray.some(([key]) => key!.includes(appRequired.import));\n\n    if (isAppCorrect) {\n      return [true];\n    }\n\n    !isAppCorrect && result.push(appRequired.import);\n  }\n\n  return [false, ...result];\n}\n\nexport function checkPnpm(npmrcPath: string): CheckResult {\n  const result = [] as unknown as CheckResult;\n\n  let content: string;\n\n  if (npmrcPath) {\n    try {\n      content = readFileSync(npmrcPath, 'utf-8');\n      const isPnpmCorrect = content.includes(pnpmRequired.content);\n\n      if (isPnpmCorrect) {\n        return [true];\n      }\n\n      !isPnpmCorrect && result.push(pnpmRequired.content);\n    } catch (error) {\n      result.push(`Error reading .npmrc file: ${npmrcPath} \\nError: ${error}`);\n    }\n\n    return [false, ...result];\n  }\n\n  return [false, ...result];\n}\n\nexport async function checkIllegalComponents<T extends boolean = false>(\n  components: string[] = [],\n  loggerError = true\n): Promise<T extends false ? boolean : string[]> {\n  const illegalList: [string, null | string][] = [];\n\n  for (const component of components) {\n    if (!store.heroUIComponentsKeysSet.has(component)) {\n      const matchComponent = findMostMatchText(store.heroUIComponentsKeys, component);\n\n      illegalList.push([component, matchComponent]);\n    }\n  }\n\n  if (illegalList.length) {\n    const [illegalComponents, matchComponents] = illegalList.reduce(\n      (acc, [illegalComponent, matchComponent]) => {\n        return [\n          acc[0] + chalk.underline(illegalComponent) + ', ',\n          acc[1] + (matchComponent ? chalk.underline(matchComponent) + ', ' : '')\n        ];\n      },\n      ['', '']\n    );\n\n    loggerError &&\n      Logger.prefix(\n        'error',\n        `Illegal components: ${illegalComponents.replace(/, $/, '')}${\n          matchComponents\n            ? `\\n${''.padEnd(12)}It may be a typo, did you mean ${matchComponents.replace(\n                /, $/,\n                ''\n              )}?`\n            : ''\n        }`\n      );\n\n    return false as T extends false ? boolean : string[];\n  }\n\n  return true as T extends false ? boolean : string[];\n}\n","/**\n * Get the content of the key in the target string.\n * @example getMatchImport('import {test} from \"source\"') => [['test', 'source']]\n * @param str\n */\nexport function getMatchImport(str: string) {\n  const importRegexAll = /import {?\\s*([\\W\\w]+?)\\s*}? from [\"'](.+)[\"']/g;\n\n  const matchAll = str.match(importRegexAll) ?? [];\n  const result: string[][] = [];\n\n  for (const item of matchAll) {\n    result.push(matchImport(item));\n  }\n\n  return result.length ? result : [];\n\n  function matchImport(itemImport: string) {\n    const importRegex = /import {?\\s*([\\W\\w]+?)\\s*}? from [\"'](.+)[\"']/;\n    const match = itemImport.match(importRegex) ?? [];\n\n    return [match[1] ?? '', match[2] ?? ''];\n  }\n}\n\nfunction removeQuote(str: string) {\n  return str.replace(/^[\"'`](.*)[\"'`]$/, '$1');\n}\n\n/**\n * Get the array content of the key in the target string.\n * @example getMatchArray('key', 'key: [a, b, c]') => ['a', 'b', 'c']\n * @param key\n * @param target\n */\nexport function getMatchArray(key: string, target: string) {\n  const mixinReg = new RegExp(`\\\\s*${key}:\\\\s\\\\[([\\\\w\\\\W]*?)\\\\]\\\\s*`);\n\n  if (mixinReg.test(target))\n    return (\n      target\n        .match(mixinReg)?.[1]\n        ?.split(/,\\s/g)\n        .map((i) => removeQuote(i.trim()))\n        .filter(Boolean) ?? []\n    );\n\n  return [];\n}\n\n/**\n * Replace the array content of the key in the target string.\n * @example replaceMatchArray('key', 'key: [a, b, c]', ['d', 'e', 'f']) => 'key: [d, e, f]'\n * @param key\n * @param target\n * @param value\n */\nexport function replaceMatchArray(\n  key: string,\n  target: string,\n  value: string[],\n  _replaceValue?: string\n) {\n  const mixinReg = new RegExp(`\\\\s*${key}:\\\\s\\\\[([\\\\w\\\\W]*?)\\\\]\\\\s*`);\n  const replaceValue = _replaceValue ?? value.map((v) => JSON.stringify(v)).join(', ');\n\n  if (mixinReg.test(target)) {\n    const _value = key === 'content' ? `\\n  ${key}: [${replaceValue}]` : `\\n  ${key}: [${value}]`;\n\n    return target.replace(mixinReg, _value);\n  }\n\n  // If the key does not exist, add the key and value to the end of the target\n  const targetArray = target.split('\\n');\n  const contentIndex = targetArray.findIndex((item) => item.includes('content:'));\n  const moduleIndex = targetArray.findIndex((item) => item.includes('module.exports ='));\n  const insertIndex = contentIndex !== -1 ? contentIndex - 1 : moduleIndex !== -1 ? moduleIndex : 0;\n\n  key === 'content'\n    ? targetArray.splice(insertIndex + 1, 0, `  ${key}: [${replaceValue}],`)\n    : targetArray.splice(insertIndex + 1, 0, `  ${key}: [${value.map((v) => removeQuote(v))}],`);\n\n  return targetArray.join('\\n');\n}\n","import type {RequiredKey, SAFE_ANY} from './type';\n\nimport chalk from 'chalk';\n\nimport {HERO_UI, THEME_UI} from 'src/constants/required';\nimport {store} from 'src/constants/store';\nimport {getCacheExecData} from 'src/scripts/cache/cache';\nimport {type Dependencies, compareVersions, getLatestVersion} from 'src/scripts/helpers';\n\nimport {Logger} from './logger';\nimport {colorMatchRegex, outputBox} from './output-info';\nimport {\n  fillAnsiLength,\n  getColorVersion,\n  getVersionAndMode,\n  isMajorUpdate,\n  isMinorUpdate,\n  strip,\n  transformPeerVersion,\n  versionModeRegex\n} from './utils';\n\nexport interface UpgradeOption {\n  package: string;\n  version: string;\n  latestVersion: string;\n  isLatest: boolean;\n  versionMode: string;\n  peerDependencies?: Dependencies;\n}\n\nconst DEFAULT_SPACE = ''.padEnd(7);\n\nconst MISSING = 'Missing';\n\ninterface Upgrade {\n  isHeroUIAll: boolean;\n  allDependencies?: Record<string, SAFE_ANY>;\n  upgradeOptionList?: UpgradeOption[];\n  all?: boolean;\n}\n\ntype ExtractUpgrade<T extends Upgrade> = T extends {isHeroUIAll: infer U}\n  ? U extends true\n    ? RequiredKey<Upgrade, 'allDependencies' | 'all'>\n    : RequiredKey<Upgrade, 'upgradeOptionList'>\n  : T;\n\ntype MissingDepSetType = {\n  name: string;\n  version: string;\n};\n\nexport async function upgrade<T extends Upgrade = Upgrade>(options: ExtractUpgrade<T>) {\n  const {all, allDependencies, isHeroUIAll, upgradeOptionList} = options as Required<Upgrade>;\n  let result: UpgradeOption[] = [];\n  const missingDepSet = new Set<MissingDepSetType>();\n\n  const allOutputData = await getAllOutputData(all, isHeroUIAll, allDependencies, missingDepSet);\n\n  const transformUpgradeOptionList = upgradeOptionList.map((c) => ({\n    ...c,\n    latestVersion: getColorVersion(c.version, c.latestVersion)\n  }));\n\n  const upgradePeerList = await Promise.all(\n    upgradeOptionList.map((upgradeOption) =>\n      getPackagePeerDep(\n        upgradeOption.package,\n        allDependencies,\n        missingDepSet,\n        upgradeOption.peerDependencies\n      )\n    )\n  );\n\n  const missingDepList = await getPackageUpgradeData([...missingDepSet]);\n\n  const outputList = [...transformUpgradeOptionList, ...allOutputData.allOutputList];\n  const peerDepList = [\n    ...upgradePeerList.flat(),\n    ...allOutputData.allPeerDepList,\n    ...missingDepList\n  ].filter(\n    (upgradeOption, index, arr) =>\n      index === arr.findIndex((c) => c.package === upgradeOption.package)\n  );\n\n  // Output dependencies box\n  outputDependencies(outputList, peerDepList);\n\n  result = [...outputList, ...peerDepList].filter(\n    (upgradeOption, index, arr) =>\n      !upgradeOption.isLatest && index === arr.findIndex((c) => c.package === upgradeOption.package)\n  );\n\n  // Output upgrade count\n  outputUpgradeCount(result);\n\n  return result;\n}\n\n/**\n * Get upgrade version\n * @param upgradeOptionList\n * @param peer Use for peerDependencies change the latest to fulfillment\n */\nexport function getUpgradeVersion(upgradeOptionList: UpgradeOption[], peer = false) {\n  if (!upgradeOptionList.length) {\n    return '';\n  }\n\n  const output: string[] = [];\n\n  const optionMaxLenMap = {\n    latestVersion: 0,\n    package: 0,\n    version: 0\n  };\n\n  for (const upgradeOption of upgradeOptionList) {\n    for (const key in upgradeOption) {\n      if (!Object.prototype.hasOwnProperty.call(upgradeOption, key) || !upgradeOption[key]) {\n        continue;\n      }\n\n      if (key === 'version') {\n        // Remove the duplicate character '^'\n        upgradeOption[key] = upgradeOption[key].replace(versionModeRegex, '');\n      }\n\n      const compareLength =\n        key === 'version'\n          ? upgradeOption[key].replace(colorMatchRegex, '').length\n          : upgradeOption[key].length;\n\n      optionMaxLenMap[key] = Math.max(optionMaxLenMap[key], compareLength);\n    }\n  }\n\n  for (const upgradeOption of upgradeOptionList) {\n    if (upgradeOption.isLatest) {\n      if (peer) {\n        // If it is peerDependencies, then skip output the latest version\n        continue;\n      }\n\n      output.push(\n        `  ${chalk.white(\n          `${`${upgradeOption.package}@${upgradeOption.versionMode || ''}${\n            upgradeOption.latestVersion\n          }`.padEnd(optionMaxLenMap.package + DEFAULT_SPACE.length + DEFAULT_SPACE.length)}`\n        )}${chalk.greenBright('latest').padStart(optionMaxLenMap.version)}${DEFAULT_SPACE}`\n      );\n      continue;\n    }\n    output.push(\n      `  ${chalk.white(\n        `${upgradeOption.package.padEnd(\n          optionMaxLenMap.package + DEFAULT_SPACE.length\n        )}${DEFAULT_SPACE}${fillAnsiLength(\n          `${upgradeOption.versionMode || ''}${upgradeOption.version}`,\n          optionMaxLenMap.version\n        )}  ->  ${upgradeOption.versionMode || ''}${upgradeOption.latestVersion}`\n      )}${DEFAULT_SPACE}`\n    );\n  }\n\n  return output.join('\\n');\n}\n\nexport async function getPackagePeerDep(\n  packageName: string,\n  allDependencies: Dependencies,\n  missingDepList: Set<MissingDepSetType>,\n  peerDependencies?: Dependencies\n): Promise<UpgradeOption[]> {\n  peerDependencies =\n    peerDependencies ||\n    JSON.parse(\n      (await getCacheExecData(`npm show ${packageName} peerDependencies --json`)) as SAFE_ANY\n    ) ||\n    {};\n\n  if (!peerDependencies || !Object.keys(peerDependencies).length) {\n    return [];\n  }\n\n  const upgradeOptionList: UpgradeOption[] = [];\n\n  for (const [peerPackage, peerVersion] of Object.entries(peerDependencies)) {\n    if (upgradeOptionList.some((c) => c.package === peerPackage)) {\n      // Avoid duplicate\n      continue;\n    }\n\n    const currentVersion = allDependencies[peerPackage];\n    let formatPeerVersion = transformPeerVersion(peerVersion);\n\n    if (!currentVersion) {\n      missingDepList.add({name: peerPackage, version: formatPeerVersion});\n      continue;\n    }\n    const {versionMode} = getVersionAndMode(allDependencies, peerPackage);\n    const isLatest = compareVersions(currentVersion, formatPeerVersion) >= 0;\n\n    if (isLatest) {\n      formatPeerVersion = transformPeerVersion(currentVersion);\n    } else {\n      // If the current version is not the latest version, then get the latest version in upgrade command\n      formatPeerVersion = await getLatestVersion(peerPackage);\n    }\n\n    upgradeOptionList.push({\n      isLatest,\n      latestVersion: isLatest\n        ? formatPeerVersion\n        : getColorVersion(currentVersion, formatPeerVersion),\n      package: peerPackage,\n      version: currentVersion,\n      versionMode\n    });\n  }\n\n  return upgradeOptionList;\n}\n\nfunction outputDependencies(outputList: UpgradeOption[], peerDepList: UpgradeOption[]) {\n  const componentName = outputList.length === 1 ? 'Component' : 'Components';\n  const outputDefault = {\n    components: {color: 'blue', text: '', title: chalk.blue(componentName)},\n    peerDependencies: {color: 'yellow', text: '', title: chalk.yellow('PeerDependencies')}\n  } as const;\n\n  const outputInfo = getUpgradeVersion(outputList);\n  const outputPeerDepInfo = getUpgradeVersion(peerDepList, true);\n  const filterPeerDepList = peerDepList.filter((c) => !c.isLatest);\n\n  outputInfo.length && outputBox({...outputDefault.components, text: outputInfo});\n  Logger.newLine();\n  filterPeerDepList.length &&\n    Logger.log(\n      chalk.gray(\n        `Required min version: ${filterPeerDepList\n          .map((c) => {\n            return `${c.package}>=${c.latestVersion.replace(colorMatchRegex, '')}`;\n          })\n          .join(', ')}`\n      )\n    );\n  outputPeerDepInfo.length &&\n    outputBox({...outputDefault.peerDependencies, text: outputPeerDepInfo});\n}\n\n/**\n * Get all output data\n * @example\n * getAllOutputData(true, allDependencies, missingDepSet) --> {allOutputList: [], allPeerDepList: []}\n */\nexport async function getAllOutputData(\n  all: boolean,\n  isHeroUIAll: boolean,\n  allDependencies: Record<string, SAFE_ANY>,\n  missingDepSet: Set<MissingDepSetType>\n) {\n  if (!all || !isHeroUIAll) {\n    return {\n      allOutputList: [],\n      allPeerDepList: []\n    };\n  }\n\n  const latestVersion = store.latestVersion;\n\n  const {currentVersion, versionMode} = getVersionAndMode(allDependencies, HERO_UI);\n  const colorVersion = getColorVersion(currentVersion, latestVersion);\n  const isLatest = compareVersions(currentVersion, latestVersion) >= 0;\n\n  const heroUIPeerDepList = await getPackagePeerDep(HERO_UI, allDependencies, missingDepSet);\n  const heroUIThemePeerDepList = await getPackagePeerDep(THEME_UI, allDependencies, missingDepSet);\n\n  const allOutputList = [\n    {\n      isLatest,\n      latestVersion: colorVersion,\n      package: HERO_UI,\n      version: currentVersion,\n      versionMode\n    }\n  ];\n  const allPeerDepList = [...heroUIPeerDepList, ...heroUIThemePeerDepList];\n  const allOutputData = {\n    allOutputList,\n    allPeerDepList\n  };\n\n  return allOutputData;\n}\n\nexport async function getPackageUpgradeData(missingDepList: MissingDepSetType[]) {\n  const result: UpgradeOption[] = [];\n\n  for (const missingDep of missingDepList) {\n    const allOutputList = {\n      isLatest: false,\n      latestVersion: missingDep.version,\n      package: missingDep.name,\n      version: chalk.red(MISSING),\n      versionMode: ''\n    };\n\n    result.push(allOutputList);\n  }\n\n  return result;\n}\n\nfunction outputUpgradeCount(outputList: UpgradeOption[]) {\n  const count = {\n    major: 0,\n    minor: 0,\n    patch: 0\n  };\n\n  for (const component of outputList) {\n    if (component.version === MISSING) {\n      count.major++;\n      continue;\n    }\n    const stripLatestVersion = strip(component.latestVersion);\n\n    if (isMajorUpdate(component.version, stripLatestVersion)) {\n      count.major++;\n    } else if (isMinorUpdate(component.version, stripLatestVersion)) {\n      count.minor++;\n    } else {\n      count.patch++;\n    }\n  }\n\n  const outputInfo = Object.entries(count)\n    .reduce((acc, [key, value]) => {\n      if (!value) {\n        return acc;\n      }\n\n      return `${acc}${chalk.yellowBright(value)} ${key}, `;\n    }, '')\n    .replace(/, $/, '');\n\n  if (outputInfo) {\n    Logger.log(outputInfo);\n    Logger.newLine();\n  }\n\n  return count;\n}\n\nexport function writeUpgradeVersion({\n  dependencies,\n  devDependencies,\n  upgradePackageList\n}: {\n  dependencies: Dependencies;\n  devDependencies: Dependencies;\n  upgradePackageList: UpgradeOption[];\n}) {\n  for (const upgradePackage of upgradePackageList) {\n    const latestVersion = strip(upgradePackage.latestVersion);\n\n    if (devDependencies[upgradePackage.package]) {\n      devDependencies[upgradePackage.package] = latestVersion;\n      continue;\n    }\n    dependencies[upgradePackage.package] = latestVersion;\n  }\n}\n","import {writeFileSync} from 'node:fs';\n\nimport {getStoreSync, store} from 'src/constants/store';\n\nimport {catchPnpmExec} from './actions/upgrade/catch-pnpm-exec';\nimport {exec} from './exec';\nimport {Logger} from './logger';\nimport {getPackageInfo} from './package';\n\nexport async function debugExecAddAction(cmd: string, components: string[] = []) {\n  if (getStoreSync('debug')) {\n    for (const component of components) {\n      Logger.warn(`Debug: ${component}`);\n    }\n  } else {\n    await catchPnpmExec(() => exec(cmd));\n  }\n}\n\nexport function debugAddedPkg(components: string[], packagePath: string) {\n  if (!components.length || !getStoreSync('debug')) return;\n\n  const {dependencies, packageJson} = getPackageInfo(packagePath);\n\n  for (const component of components) {\n    const compData = store.heroUIComponentsMap[component];\n\n    if (!compData) continue;\n\n    dependencies[compData.package] = `${compData.package}@${compData.version}`;\n  }\n  writeFileSync(\n    packagePath,\n    JSON.stringify(\n      {\n        ...packageJson,\n        dependencies\n      },\n      null,\n      2\n    ),\n    'utf-8'\n  );\n}\n\nexport function debugRemovedPkg(components: string[], packagePath: string) {\n  if (!components.length || !getStoreSync('debug')) return;\n\n  const {dependencies, packageJson} = getPackageInfo(packagePath);\n\n  for (const component of components) {\n    const compData = store.heroUIComponentsMap[component];\n\n    if (!compData) continue;\n    delete dependencies[compData.package];\n  }\n  writeFileSync(\n    packagePath,\n    JSON.stringify(\n      {\n        ...packageJson,\n        dependencies\n      },\n      null,\n      2\n    ),\n    'utf-8'\n  );\n}\n","import chalk from 'chalk';\n\nimport {exec} from '@helpers/exec';\nimport {selectClack} from 'src/prompts/clack';\n\nexport async function catchPnpmExec(execFn: () => Promise<unknown>) {\n  try {\n    await execFn();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } catch (error: any) {\n    if (error) {\n      const reRunPnpm = await selectClack({\n        message: `${chalk.red('Error: ')}a unexpected error occurred, run \"pnpm install\" maybe can fix it or report it as a bug`,\n        options: [\n          {label: 'Re-run pnpm install', value: 're-run-pnpm-install'},\n          {label: 'Exit', value: 'exit'}\n        ]\n      });\n\n      if (reRunPnpm === 'exit') {\n        process.exit(1);\n      }\n\n      await exec('pnpm install --force');\n      await execFn();\n    }\n  }\n}\n","import type {AppendKeyValue} from './type';\n\nimport {type CommonExecOptions, execSync} from 'node:child_process';\n\nimport {Logger} from './logger';\nimport {omit} from './utils';\n\nconst execCache = new Map<string, string>();\n\n/**\n * Execute a command and return the output\n *\n * Recommend use `getCacheExecData` instead if you want to cache the output\n */\nexport async function exec(\n  cmd: string,\n  commonExecOptions?: AppendKeyValue<CommonExecOptions, 'logCmd', boolean> & {\n    cache?: boolean;\n  }\n) {\n  return new Promise((resolve, reject) => {\n    try {\n      const {cache = true, logCmd = true} = commonExecOptions || {};\n\n      if (execCache.has(cmd) && cache) {\n        resolve(execCache.get(cmd));\n      }\n\n      if (logCmd) {\n        Logger.newLine();\n        Logger.log(`${cmd}`);\n      }\n\n      const stdout = execSync(cmd, {\n        stdio: 'inherit',\n        ...(commonExecOptions ? omit(commonExecOptions, ['logCmd']) : {})\n      });\n\n      if (stdout) {\n        const output = stdout.toString();\n\n        resolve(output);\n        execCache.set(cmd, output);\n      }\n      resolve('');\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n","import type {SAFE_ANY} from '@helpers/type';\n\nimport {\n  type ConfirmOptions,\n  spinner as _spinner,\n  cancel,\n  confirm,\n  isCancel,\n  select,\n  text\n} from '@clack/prompts';\nimport chalk from 'chalk';\n\nexport const cancelClack = (value: SAFE_ANY) => {\n  if (isCancel(value)) {\n    cancel(`${chalk.red('✖')} Operation cancelled`);\n    process.exit(0);\n  }\n};\n\nexport const textClack: typeof text = async (opts) => {\n  const result = (await text(opts)) as string;\n\n  cancelClack(result);\n\n  return result;\n};\n\nexport const selectClack: typeof select = async (opts) => {\n  const result = await select(opts);\n\n  cancelClack(result);\n\n  return result;\n};\n\nexport const spinner = _spinner();\n\nexport interface TaskClackOptions<T> {\n  text: string;\n  task: PromiseLike<T> | T;\n  successText?: string;\n  failText?: string;\n}\n\nexport const taskClack = async <T>(opts: TaskClackOptions<T>) => {\n  const {failText, successText, task, text} = opts;\n\n  let result: string | null = null;\n\n  try {\n    spinner.start(text);\n    result = await (task instanceof Promise ? task : Promise.resolve(task));\n    spinner.stop(successText);\n  } catch (error) {\n    cancel(failText ?? result ?? 'Task failed');\n    process.exit(0);\n  }\n\n  return result;\n};\n\nexport const confirmClack = async (opts: ConfirmOptions) => {\n  const result = await confirm(opts);\n\n  cancelClack(result);\n\n  return result;\n};\n","import type {SAFE_ANY} from './type';\n\nimport {findUp} from 'find-up';\nimport path from 'pathe';\n\nimport {ROOT} from 'src/constants/path';\nimport {getSelect} from 'src/prompts';\n\ntype TupleToUnion<T extends readonly SAFE_ANY[]> = T[number];\n\nexport const AGENTS = ['npm', 'bun', 'pnpm', 'yarn'] as const;\n\nexport type Agent = TupleToUnion<typeof AGENTS>;\n\nexport const agents = AGENTS;\n\n// the order here matters, more specific one comes first\nexport const LOCKS: Record<string, Agent> = {\n  'bun.lockb': 'bun',\n  'npm-shrinkwrap.json': 'npm',\n  'package-lock.json': 'npm',\n  'pnpm-lock.yaml': 'pnpm',\n  'yarn.lock': 'yarn'\n};\n\nexport async function detect(cwd = ROOT) {\n  let agent: Agent;\n  const lockPath = await findUp(Object.keys(LOCKS), {cwd});\n\n  // detect based on lock\n  if (lockPath) {\n    agent = LOCKS[path.basename(lockPath)]!;\n  } else {\n    agent = await getSelect(\n      'No agent found, please choose one',\n      AGENTS.map((agent) => ({\n        title: agent,\n        value: agent\n      }))\n    );\n  }\n\n  return agent;\n}\n","import prompts from '@winches/prompts';\nimport chalk from 'chalk';\n\nimport {Logger} from '@helpers/logger';\n\nconst defaultPromptOptions: prompts.Options = {\n  onCancel: () => {\n    Logger.log(`${chalk.red('✖')} Operation cancelled`);\n    process.exit(0);\n  }\n};\n\nexport async function getText(message: string, initial?: string) {\n  const result = await prompts(\n    {\n      message,\n      name: 'value',\n      type: 'text',\n      ...(initial ? {initial} : {})\n    },\n    defaultPromptOptions\n  );\n\n  return result.value;\n}\n\nexport async function getAutocomplete(message: string, choices?: prompts.Choice[]) {\n  const result = await prompts(\n    {\n      message,\n      name: 'value',\n      type: 'autocomplete',\n      ...(choices ? {choices} : {})\n    },\n    defaultPromptOptions\n  );\n\n  return result.value;\n}\n\nexport async function getAutocompleteMultiselect(message: string, choices?: prompts.Choice[]) {\n  const result = await prompts(\n    {\n      hint: '- Space to select. Return to submit',\n      message,\n      min: 1,\n      name: 'value',\n      type: 'autocompleteMultiselect',\n      ...(choices ? {choices} : {})\n    },\n    defaultPromptOptions\n  );\n\n  return result.value;\n}\n\nexport async function getSelect(message: string, choices: prompts.Choice[]) {\n  const result = await prompts(\n    {\n      message,\n      name: 'value',\n      type: 'select',\n      ...(choices ? {choices} : {})\n    },\n    defaultPromptOptions\n  );\n\n  return result.value;\n}\n\nexport async function getMultiselect(message: string, choices?: prompts.Choice[]) {\n  const result = await prompts(\n    {\n      hint: '- Space to select. Return to submit',\n      message,\n      min: 1,\n      name: 'value',\n      type: 'multiselect',\n      ...(choices ? {choices} : {})\n    },\n    defaultPromptOptions\n  );\n\n  return result.value;\n}\n","import type {CheckType} from './check';\n\nimport {execSync} from 'node:child_process';\nimport {existsSync, readFileSync, writeFileSync} from 'node:fs';\n\nimport {pnpmRequired, tailwindRequired} from 'src/constants/required';\nimport {getStoreSync} from 'src/constants/store';\n\nimport {Logger} from './logger';\nimport {getMatchArray, replaceMatchArray} from './match';\n\ninterface FixTailwind {\n  errorInfoList: string[];\n  tailwindPath: string;\n  write?: boolean;\n  format?: boolean;\n}\n\ninterface FixProvider {\n  write?: boolean;\n  format?: boolean;\n}\n\nexport function fixProvider(appPath: string, options: FixProvider) {\n  const {format = false, write = true} = options;\n  let appContent = readFileSync(appPath, 'utf-8');\n\n  appContent = `import {HeroUIProvider} from \"@heroui/react\";\\n${appContent}`;\n\n  appContent = wrapWithHeroUIProvider(appContent);\n\n  write && writeFileSync(appPath, appContent, 'utf-8');\n  format && execSync(`npx prettier --write ${appPath}`, {stdio: 'ignore'});\n}\n\nfunction wrapWithHeroUIProvider(content: string) {\n  const returnRegex = /return\\s*\\(([\\S\\s]*?)\\);/g;\n  const wrappedCode = content.replace(returnRegex, (_, p1) => {\n    return `return (\n      <HeroUIProvider>\n        ${p1.trim()}\n      </HeroUIProvider>\n    );`;\n  });\n\n  return wrappedCode;\n}\n\nexport function fixTailwind(type: CheckType, options: FixTailwind) {\n  const {errorInfoList, format = false, tailwindPath, write = true} = options;\n\n  if (!errorInfoList.length) {\n    return;\n  }\n\n  let tailwindContent = readFileSync(tailwindPath, 'utf-8');\n  let contentMatch = getMatchArray('content', tailwindContent);\n  const pluginsMatch = getMatchArray('plugins', tailwindContent);\n\n  for (const errorInfo of errorInfoList) {\n    const [errorType, info] = transformErrorInfo(errorInfo);\n\n    if (errorType === 'content') {\n      // Check if all the required content is added then skip\n      const allPublic = contentMatch.includes(tailwindRequired.content);\n\n      if (allPublic) continue;\n\n      contentMatch = contentMatch.filter((content) => !content.includes('@heroui/theme/dist/'));\n      contentMatch.push(info);\n      tailwindContent = replaceMatchArray(\n        'content',\n        tailwindContent,\n        contentMatch,\n        contentMatch\n          .map((v, index, arr) => {\n            // Add 4 spaces before the content\n            if (index === 0) {\n              if (arr.length === 1) {\n                return `\\n    ${JSON.stringify(v)}\\n`;\n              }\n\n              return `\\n    ${JSON.stringify(v)}`;\n            }\n            if (arr.length - 1 === index) {\n              return `    ${JSON.stringify(v)}\\n  `;\n            }\n\n            return `    ${JSON.stringify(v)}`;\n          })\n          .join(',\\n')\n      );\n    } else if (errorType === 'plugins') {\n      pluginsMatch.push(info);\n      tailwindContent = replaceMatchArray('plugins', tailwindContent, pluginsMatch);\n\n      // Add import content\n      const importContent = tailwindRequired.importContent(tailwindPath.endsWith('.ts'));\n\n      tailwindContent = `${importContent}\\n${tailwindContent}`;\n    }\n\n    if (type === 'all' && errorType === 'darkMode') {\n      // Add darkMode under the plugins content in tailwindContent\n      const darkModeIndex = tailwindContent.indexOf('plugins') - 1;\n      const darkModeContent = tailwindRequired.darkMode;\n\n      tailwindContent = `${tailwindContent.slice(\n        0,\n        darkModeIndex\n      )} ${darkModeContent},\\n${tailwindContent.slice(darkModeIndex)}`;\n    }\n  }\n\n  write && writeFileSync(tailwindPath, tailwindContent, 'utf-8');\n\n  if (format) {\n    try {\n      execSync(`npx prettier --write ${tailwindPath}`, {stdio: 'ignore'});\n    } catch (error) {\n      Logger.warn(`Prettier failed to format ${tailwindPath}`);\n    }\n  }\n}\n\nfunction transformErrorInfo(errorInfo: string): [keyof typeof tailwindRequired, string] {\n  if (tailwindRequired.darkMode.includes(errorInfo)) {\n    return ['darkMode', errorInfo];\n  } else if (tailwindRequired.plugins.includes(errorInfo)) {\n    return ['plugins', errorInfo];\n  } else {\n    return ['content', errorInfo];\n  }\n}\n\nexport function fixPnpm(\n  npmrcPath: string,\n  write = true,\n  runInstall = true,\n  logger: (({message, runInstall}) => void) | undefined = undefined\n) {\n  if (!existsSync(npmrcPath)) {\n    write && writeFileSync(npmrcPath, pnpmRequired.content, 'utf-8');\n  } else {\n    let content = readFileSync(npmrcPath, 'utf-8');\n\n    content = `${pnpmRequired.content}\\n${content}`;\n\n    write && writeFileSync(npmrcPath, content, 'utf-8');\n  }\n\n  if (!logger) {\n    Logger.newLine();\n    Logger.log(`Added the required content in file: ${npmrcPath}`);\n\n    if (runInstall && !getStoreSync('debug')) {\n      Logger.newLine();\n      Logger.log('Pnpm restructure will be run now');\n      execSync('pnpm install', {stdio: 'inherit'});\n    }\n\n    return;\n  }\n\n  // Custom logger\n  logger({message: `Added the required content in file: ${npmrcPath}`, runInstall});\n}\n","import type {CheckType} from '@helpers/check';\n\nexport const APP_REPO = 'https://codeload.github.com/heroui-inc/next-app-template/tar.gz/main';\nexport const PAGES_REPO = 'https://codeload.github.com/heroui-inc/next-pages-template/tar.gz/main';\nexport const VITE_REPO = 'https://codeload.github.com/heroui-inc/vite-template/tar.gz/main';\n\nexport const APP_DIR = 'next-app-template-main';\nexport const PAGES_DIR = 'next-pages-template-main';\nexport const VITE_DIR = 'vite-template-main';\n\nexport const APP_NAME = 'next-app-template';\nexport const PAGES_NAME = 'next-pages-template';\nexport const VITE_NAME = 'vite-template';\nexport const DEFAULT_PROJECT_NAME = 'heroui-app';\n\nexport function tailwindTemplate(type: 'all', content?: string): string;\nexport function tailwindTemplate(type: 'partial', content: string): string;\nexport function tailwindTemplate(type: CheckType, content?: string) {\n  if (type === 'all') {\n    return `// tailwind.config.js\nconst {heroui} = require(\"@heroui/react\");\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    \"./node_modules/@heroui/theme/dist/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  darkMode: \"class\",\n  plugins: [heroui()],\n};`;\n  } else {\n    return `// tailwind.config.js\nconst {heroui} = require(\"@heroui/theme\");\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    ${JSON.stringify(content)},\n  ],\n  theme: {\n    extend: {},\n  },\n  darkMode: \"class\",\n  plugins: [heroui()],\n};`;\n  }\n}\n","import chalk from 'chalk';\nimport {basename} from 'pathe';\n\nimport {\n  checkApp,\n  checkPnpm,\n  checkRequiredContentInstalled,\n  checkTailwind,\n  combineProblemRecord\n} from '@helpers/check';\nimport {detect} from '@helpers/detect';\nimport {Logger, type PrefixLogType} from '@helpers/logger';\nimport {getPackageInfo} from '@helpers/package';\nimport {findFiles, strip, transformOption} from '@helpers/utils';\nimport {resolver} from 'src/constants/path';\nimport {DOCS_PNPM_SETUP, DOCS_TAILWINDCSS_SETUP, HERO_UI} from 'src/constants/required';\n\ninterface DoctorActionOptions {\n  packagePath?: string;\n  tailwindPath?: string;\n  appPath?: string;\n  checkApp?: boolean | 'false';\n  checkTailwind?: boolean | 'false';\n  checkPnpm?: boolean | 'false';\n}\n\nexport interface ProblemRecord {\n  name: string;\n  level: Extract<PrefixLogType, 'error' | 'warn'>;\n  outputFn: () => void;\n}\n\nexport async function doctorAction(options: DoctorActionOptions) {\n  const {\n    appPath = findFiles('**/App.(j|t)sx')[0],\n    checkApp: _enableCheckApp = false,\n    checkPnpm: _enableCheckPnpm = true,\n    checkTailwind: _enableCheckTailwind = true,\n    packagePath = resolver('package.json'),\n    tailwindPath = findFiles('**/tailwind.config.(j|t)s')\n  } = options;\n  const enableCheckApp = transformOption(_enableCheckApp);\n  const enableCheckPnpm = transformOption(_enableCheckPnpm);\n  const enableCheckTailwind = transformOption(_enableCheckTailwind);\n  const tailwindPaths = [tailwindPath].flat();\n\n  const {allDependencies, allDependenciesKeys, currentComponents, isAllComponents} =\n    getPackageInfo(packagePath);\n\n  /** ======================== Output when there is no components installed ======================== */\n  if (!currentComponents.length && !isAllComponents) {\n    Logger.prefix(\n      'error',\n      `❌ No ${chalk.underline(\n        'HeroUI components'\n      )} found in your project. Please consult the installation guide at: https://heroui.com/docs/guide/installation#global-installation`\n    );\n\n    return;\n  }\n\n  /** ======================== Problem record ======================== */\n  const problemRecord: ProblemRecord[] = [];\n\n  /** ======================== Check whether installed redundant dependencies ======================== */\n  if (isAllComponents && currentComponents.length) {\n    problemRecord.push({\n      level: 'warn',\n      name: 'redundantDependencies',\n      outputFn: () => {\n        Logger.log(\n          'You have installed some unnecessary dependencies. Consider removing them for optimal performance.'\n        );\n        Logger.newLine();\n        Logger.log('The following dependencies are redundant:');\n        currentComponents.forEach((component) => {\n          Logger.log(`- ${component.package}`);\n        });\n      }\n    });\n  }\n  // If there is no tailwind.config file\n  if (enableCheckTailwind && !tailwindPaths.length) {\n    problemRecord.push({\n      level: 'error',\n      name: 'missingTailwind',\n      outputFn: () => {\n        Logger.log(\n          'Missing tailwind.config.(j|t)s file. To set up, visit: ' +\n            chalk.underline(DOCS_TAILWINDCSS_SETUP)\n        );\n      }\n    });\n  }\n  // If there is no App.tsx\n  if (enableCheckApp && !appPath) {\n    problemRecord.push({\n      level: 'error',\n      name: 'missingApp',\n      outputFn: () => {\n        Logger.log(\n          'App.(j|t)sx file not found. Please specify the path using: doctor --appPath=[yourAppPath]'\n        );\n      }\n    });\n  }\n\n  /** ======================== Check if the allComponents required dependencies installed ======================== */\n  if (isAllComponents) {\n    // Check if framer-motion allComponents is installed\n    let [isCorrectInstalled, ...missingDependencies] = await checkRequiredContentInstalled(\n      'all',\n      allDependenciesKeys,\n      {allDependencies, packageNames: [HERO_UI], peerDependencies: true}\n    );\n\n    // Check if other allComponents are installed\n    if (currentComponents.length) {\n      const [_isCorrectInstalled, ..._missingDependencies] = await checkRequiredContentInstalled(\n        'partial',\n        allDependenciesKeys,\n        {\n          allDependencies,\n          packageNames: currentComponents.map((c) => c.package),\n          peerDependencies: true\n        }\n      );\n\n      isCorrectInstalled = _isCorrectInstalled || isCorrectInstalled;\n      // Combine missing dependencies\n      missingDependencies = [..._missingDependencies, ...missingDependencies].filter(\n        (c, index, arr) => {\n          c = strip(c).replace(/@[\\d.]+/g, '');\n\n          return arr.findIndex((d) => strip(d).replace(/@[\\d.]+/g, '') === c) === index;\n        }\n      );\n    }\n\n    if (!isCorrectInstalled) {\n      problemRecord.push(combineProblemRecord('missingDependencies', {missingDependencies}));\n    }\n\n    // Check whether tailwind.config file is correct\n    if (enableCheckTailwind) {\n      for (const tailwindPath of tailwindPaths) {\n        const [isCorrectTailwind, ...errorInfo] = checkTailwind('all', tailwindPath);\n\n        if (!isCorrectTailwind) {\n          const tailwindName = basename(tailwindPath);\n\n          problemRecord.push(combineProblemRecord('incorrectTailwind', {errorInfo, tailwindName}));\n        }\n      }\n    }\n\n    // Check whether the App.tsx is correct\n    if (enableCheckApp && appPath) {\n      const [isAppCorrect, ...errorInfo] = checkApp('all', appPath);\n\n      if (!isAppCorrect) {\n        problemRecord.push(combineProblemRecord('incorrectApp', {errorInfo}));\n      }\n    }\n  } else if (currentComponents.length) {\n    // Individual components check\n    const [isCorrectInstalled, ...missingDependencies] = await checkRequiredContentInstalled(\n      'partial',\n      allDependenciesKeys,\n      {\n        allDependencies,\n        packageNames: currentComponents.map((c) => c.package),\n        peerDependencies: true\n      }\n    );\n\n    if (!isCorrectInstalled) {\n      problemRecord.push(combineProblemRecord('missingDependencies', {missingDependencies}));\n    }\n\n    // Check whether tailwind.config file is correct\n    if (enableCheckTailwind) {\n      const isPnpm = (await detect()) === 'pnpm';\n\n      for (const tailwindPath of tailwindPaths) {\n        const [isCorrectTailwind, ...errorInfo] = checkTailwind(\n          'partial',\n          tailwindPath,\n          currentComponents,\n          isPnpm,\n          undefined,\n          true\n        );\n\n        if (!isCorrectTailwind) {\n          const tailwindName = basename(tailwindPath);\n\n          problemRecord.push(combineProblemRecord('incorrectTailwind', {errorInfo, tailwindName}));\n        }\n      }\n    }\n\n    // Check whether the App.tsx is correct\n    if (enableCheckApp && appPath) {\n      const [isAppCorrect, ...errorInfo] = checkApp('partial', appPath);\n\n      if (!isAppCorrect) {\n        problemRecord.push(combineProblemRecord('incorrectApp', {errorInfo}));\n      }\n    }\n  }\n\n  /** ======================== Check whether Pnpm setup is correct ======================== */\n  if (enableCheckPnpm) {\n    const currentPkgManager = await detect();\n\n    if (currentPkgManager === 'pnpm') {\n      const npmrcPath = resolver('.npmrc');\n\n      const [isCorrect, ...errorInfo] = checkPnpm(npmrcPath);\n\n      if (!isCorrect) {\n        problemRecord.push({\n          level: 'error',\n          name: 'incorrectPnpm',\n          outputFn: () => {\n            Logger.log(\n              'The pnpm setup is incorrect \\nPlease update your configuration according to the guidelines provided at: ' +\n                chalk.underline(DOCS_PNPM_SETUP)\n            );\n            Logger.newLine();\n            Logger.log('Required changes:');\n            errorInfo.forEach((info) => {\n              Logger.log(`- Add ${info}`);\n            });\n          }\n        });\n      }\n    }\n  }\n\n  /** ======================== Return when there is no problem ======================== */\n  if (!problemRecord.length) {\n    Logger.newLine();\n    Logger.success('✅ Your project has no detected issues.');\n\n    return;\n  }\n\n  /** ======================== Output the problem record ======================== */\n  Logger.prefix(\n    'error',\n    `❌ Your project has ${chalk.underline(problemRecord.length)} issue${\n      problemRecord.length === 1 ? '' : 's'\n    } that require attention`\n  );\n  Logger.newLine();\n\n  for (let index = 0; index < problemRecord.length; index++) {\n    const problem = problemRecord[index] as ProblemRecord;\n\n    Logger[problem.level](`❗️Issue ${index + 1}: ${chalk.bold(problem.name)}`);\n    Logger.newLine();\n    problem.outputFn();\n    Logger.newLine();\n  }\n\n  process.exit(0);\n}\n","import {outputComponents, outputInfo} from '@helpers/output-info';\nimport {getPackageInfo} from '@helpers/package';\nimport {resolver} from 'src/constants/path';\n\ninterface EnvActionOptions {\n  packagePath?: string;\n}\n\nexport async function envAction(options: EnvActionOptions) {\n  const {packagePath = resolver('package.json')} = options;\n\n  const {currentComponents} = getPackageInfo(packagePath);\n\n  /** ======================== Output the current components ======================== */\n  outputComponents({components: currentComponents});\n\n  /** ======================== Output the system environment info ======================== */\n  outputInfo();\n\n  process.exit(0);\n}\n","import type {Agent} from '@helpers/detect';\nimport type {GetUnionLastValue} from '@helpers/type';\n\nimport {existsSync, renameSync} from 'node:fs';\n\nimport * as p from '@clack/prompts';\nimport chalk from 'chalk';\nimport {join} from 'pathe';\n\nimport {changeNpmrc} from '@helpers/actions/init/change-npmrc';\nimport {downloadTemplate} from '@helpers/fetch';\nimport {fixPnpm} from '@helpers/fix';\nimport {checkInitOptions} from '@helpers/init';\nimport {getPackageManagerInfo} from '@helpers/utils';\nimport {selectClack, taskClack, textClack} from 'src/prompts/clack';\nimport {resolver} from 'src/scripts/path';\n\nimport {ROOT} from '../../src/constants/path';\nimport {\n  APP_DIR,\n  APP_NAME,\n  APP_REPO,\n  PAGES_DIR,\n  PAGES_NAME,\n  PAGES_REPO,\n  VITE_DIR,\n  VITE_NAME,\n  VITE_REPO\n} from '../../src/constants/templates';\n\nexport interface InitActionOptions {\n  template?: 'app' | 'pages' | 'vite';\n  package?: Agent;\n}\n\nexport const templatesMap: Record<Required<InitActionOptions>['template'], string> = {\n  app: APP_NAME,\n  pages: PAGES_NAME,\n  vite: VITE_NAME\n};\n\nexport async function initAction(_projectName: string, options: InitActionOptions) {\n  const {package: _package = 'npm', template: _template} = options;\n\n  /** ======================== Check invalid options ======================== */\n  checkInitOptions(_template, _package);\n\n  /** ======================== Welcome title ======================== */\n  p.intro(chalk.cyanBright('Create a new project'));\n\n  /** ======================== Get the init info ======================== */\n  const {packageName, projectName, template} = await getTableInfo(\n    _package,\n    _projectName,\n    _template\n  );\n  const {run} = getPackageManagerInfo(packageName);\n\n  /** ======================== Generate template ======================== */\n  // Detect if the project name already exists\n  if (existsSync(resolver(`${ROOT}/${projectName}`))) {\n    p.cancel(`The project name ${chalk.redBright(projectName)} already exists`);\n    process.exit(1);\n  }\n\n  if (template === 'app') {\n    await generateTemplate(APP_REPO);\n    renameTemplate(APP_DIR, projectName);\n  } else if (template === 'pages') {\n    await generateTemplate(PAGES_REPO);\n    renameTemplate(PAGES_DIR, projectName);\n  } else if (template === 'vite') {\n    await generateTemplate(VITE_REPO);\n    renameTemplate(VITE_DIR, projectName);\n  }\n\n  const npmrcFile = resolver(`${ROOT}/${projectName}/.npmrc`);\n\n  /** ======================== Change default npmrc content ======================== */\n  changeNpmrc(npmrcFile);\n\n  /** ======================== Pnpm setup (optional) ======================== */\n  if (packageName === 'pnpm') {\n    fixPnpm(npmrcFile, true, false, ({message}) => {\n      p.log.message(message);\n    });\n  }\n\n  /** ======================== Add guide ======================== */\n  p.note(\n    `cd ${chalk.cyanBright(projectName)}\\n${chalk.cyanBright(packageName)} install`,\n    'Next steps'\n  );\n\n  p.outro(`🚀 Get started with ${chalk.cyanBright(`${packageName} ${run} dev`)}`);\n\n  process.exit(0);\n}\n\n/** ======================== Helper function ======================== */\nasync function generateTemplate(url: string) {\n  await taskClack({\n    failText: 'Template creation failed',\n    successText: 'Template created successfully!',\n    task: downloadTemplate(ROOT, url),\n    text: 'Creating template...'\n  });\n}\n\nfunction renameTemplate(originName: string, projectName: string) {\n  try {\n    renameSync(join(ROOT, originName), join(ROOT, projectName));\n  } catch (error) {\n    if (error) {\n      p.cancel(`rename Error: ${error}`);\n      process.exit(0);\n    }\n  }\n}\n\nexport type GenerateOptions<T, Last = GetUnionLastValue<T>> = [T] extends [never]\n  ? []\n  : [\n      ...GenerateOptions<Exclude<T, Last>>,\n      {\n        label: string;\n        value: Last;\n        hint: string;\n      }\n    ];\n\nasync function getTableInfo(packageName?: string, projectName?: string, template?: string) {\n  const options: GenerateOptions<Exclude<InitActionOptions['template'], undefined>> = [\n    {\n      hint: 'A Next.js 14 with app directory template pre-configured with HeroUI (v2) and Tailwind CSS.',\n      label: chalk.gray('App'),\n      value: 'app'\n    },\n    {\n      hint: 'A Next.js 14 with pages directory template pre-configured with HeroUI (v2) and Tailwind CSS.',\n      label: chalk.gray('Pages'),\n      value: 'pages'\n    },\n    {\n      hint: 'A Vite template pre-configured with HeroUI (v2) and Tailwind CSS.',\n      label: chalk.gray('Vite'),\n      value: 'vite'\n    }\n  ];\n\n  template = (await selectClack({\n    initialValue: template,\n    message: 'Select a template (Enter to select)',\n    options\n  })) as string;\n\n  projectName = (await textClack({\n    initialValue: projectName ?? templatesMap[template],\n    message: 'New project name (Enter to skip with default name)',\n    placeholder: projectName ?? templatesMap[template]\n  })) as string;\n\n  packageName = (await selectClack({\n    initialValue: packageName,\n    message: 'Select a package manager (Enter to select)',\n    options: [\n      {\n        label: chalk.gray('npm'),\n        value: 'npm'\n      },\n      {\n        label: chalk.gray('yarn'),\n        value: 'yarn'\n      },\n      {\n        label: chalk.gray('pnpm'),\n        value: 'pnpm'\n      },\n      {\n        label: chalk.gray('bun'),\n        value: 'bun'\n      }\n    ]\n  })) as Agent;\n\n  return {\n    packageName: packageName as Agent,\n    projectName,\n    template\n  };\n}\n","import {writeFileSync} from 'node:fs';\n\nconst DEFAULT_NPMRC_CONTENT = `package-lock=true`;\n\n/**\n * Change the npmrc file to the default content\n * Currently it is using `package-lock=false` which won't generate the lockfile\n */\nexport function changeNpmrc(npmrcFile: string) {\n  writeFileSync(npmrcFile, DEFAULT_NPMRC_CONTENT, 'utf-8');\n}\n","import {Readable} from 'node:stream';\nimport {pipeline} from 'node:stream/promises';\n\nimport retry from 'async-retry';\nimport tar from 'tar';\n\n/**\n * Fetch the tar stream from the specified URL.\n * @param url\n */\nasync function fetchTarStream(url: string) {\n  const res = await fetch(url);\n\n  if (!res.body) {\n    throw new Error(`Failed to download: ${url}`);\n  }\n\n  return Readable.fromWeb(res.body);\n}\n\n/**\n * Download the template from the specified URL and extract it to the specified directory.\n * @param root\n * @param url\n */\nexport async function downloadTemplate(root: string, url: string) {\n  await retry(\n    async (bail) => {\n      try {\n        await pipeline(\n          await fetchTarStream(url),\n          tar.x({\n            cwd: root\n          })\n        );\n      } catch (error) {\n        bail(new Error(`Failed to download ${url} Error: ${error}`));\n      }\n    },\n    {\n      retries: 3\n    }\n  );\n}\n","import type {SAFE_ANY} from './type';\n\nimport {type InitActionOptions, templatesMap} from 'src/actions/init-action';\n\nimport {AGENTS, type Agent} from './detect';\nimport {printMostMatchText} from './math-diff';\n\nexport function checkInitOptions(template: InitActionOptions['template'], agent: Agent) {\n  if (template) {\n    if (!Object.keys(templatesMap).includes(template)) {\n      printMostMatchText(Object.keys(templatesMap), template);\n    }\n  }\n  if (agent) {\n    if (!AGENTS.includes(agent)) {\n      printMostMatchText(AGENTS as SAFE_ANY, agent);\n    }\n  }\n}\n","import {Logger} from '@helpers/logger';\nimport {outputComponents} from '@helpers/output-info';\nimport {getPackageInfo} from '@helpers/package';\nimport {store} from 'src/constants/store';\n\nimport {type HeroUIComponents} from '../../src/constants/component';\nimport {resolver} from '../../src/constants/path';\n\ninterface ListActionOptions {\n  remote?: boolean;\n  packagePath?: string;\n}\n\nexport async function listAction(options: ListActionOptions) {\n  const {packagePath = resolver('package.json'), remote = false} = options;\n\n  let components = store.heroUIComponents as HeroUIComponents;\n\n  try {\n    /** ======================== Get the installed components ======================== */\n    if (!remote) {\n      const {currentComponents} = await getPackageInfo(packagePath);\n\n      components = currentComponents;\n    }\n\n    if (!components.length) {\n      Logger.warn(`No HeroUI components detected in the specified package.json at: ${packagePath}`);\n\n      return;\n    }\n\n    /** ======================== Output the components ======================== */\n    remote ? outputComponents({commandName: 'list', components}) : outputComponents({components});\n  } catch (error) {\n    Logger.prefix('error', `An error occurred while attempting to list the components: ${error}`);\n  }\n\n  process.exit(0);\n}\n","/* eslint-disable no-var */\nimport type {SAFE_ANY} from '@helpers/type';\n\nimport {existsSync, readFileSync, writeFileSync} from 'node:fs';\n\nimport chalk from 'chalk';\n\nimport {checkIllegalComponents} from '@helpers/check';\nimport {detect} from '@helpers/detect';\nimport {Logger} from '@helpers/logger';\nimport {outputComponents} from '@helpers/output-info';\nimport {\n  getPackageInfo,\n  transformComponentsToPackage,\n  transformPackageDetail\n} from '@helpers/package';\nimport {removeDependencies, removeTailwind} from '@helpers/remove';\nimport {findFiles} from '@helpers/utils';\nimport {resolver} from 'src/constants/path';\nimport {\n  DOCS_PROVIDER_SETUP,\n  HERO_UI,\n  SYSTEM_UI,\n  THEME_UI,\n  pnpmRequired\n} from 'src/constants/required';\nimport {getAutocompleteMultiselect, getSelect} from 'src/prompts';\n\ninterface RemoveOptionsAction {\n  packagePath: string;\n  all?: boolean;\n  tailwindPath?: string;\n  prettier?: boolean;\n}\n\nexport async function removeAction(components: string[], options: RemoveOptionsAction) {\n  const {\n    all = false,\n    packagePath = resolver('package.json'),\n    tailwindPath = findFiles('**/tailwind.config.(j|t)s')[0]\n  } = options;\n\n  var {allDependencies, allDependenciesKeys, currentComponents} = getPackageInfo(packagePath);\n  const packageManager = await detect();\n  const prettier = options.prettier ?? allDependenciesKeys.has('prettier');\n\n  let isHeroUIAll = !!allDependencies[HERO_UI];\n\n  // If no Installed HeroUI components then exit\n  if (!currentComponents.length && !isHeroUIAll) {\n    Logger.prefix('error', `No HeroUI components detected in your package.json at: ${packagePath}`);\n\n    return;\n  }\n\n  if (all || isHeroUIAll) {\n    components = isHeroUIAll ? [HERO_UI] : currentComponents.map((component) => component.package);\n  } else if (!components.length) {\n    components = await getAutocompleteMultiselect(\n      'Select the components to remove',\n      currentComponents.map((component) => {\n        return {\n          title: component.package,\n          value: component.package\n        };\n      })\n    );\n  } else {\n    // Check if the custom input components are valid\n    if (!checkIllegalComponents(components)) {\n      return;\n    }\n\n    // Transform components to package\n    components = transformComponentsToPackage(components);\n  }\n\n  // Ask user whether need to remove these components\n  const filteredComponents = components.includes(HERO_UI)\n    ? await transformPackageDetail(components, allDependencies)\n    : currentComponents.filter((component) =>\n        components.some((c) => c.includes(component.package) || c.includes(component.name))\n      );\n\n  outputComponents({\n    components: filteredComponents,\n    message: chalk.yellowBright('❗️ Components slated for removal:')\n  });\n\n  const isRemove = await getSelect('Confirm removal of these components:', [\n    {title: 'Yes', value: true},\n    {title: 'No', value: false}\n  ]);\n\n  if (!isRemove) {\n    // Exit the process\n    process.exit(0);\n  }\n\n  /** ======================== Step 1 Remove dependencies ======================== */\n  const removeDepList: string[] = [...components];\n  const filterComponents = currentComponents.filter((c) => !components.includes(c.package));\n\n  if (!filterComponents.length) {\n    // Remove the selected components if not components leave then remove the theme-ui and system-ui\n    allDependencies[THEME_UI] && removeDepList.push(THEME_UI);\n    allDependencies[SYSTEM_UI] && removeDepList.push(SYSTEM_UI);\n  }\n\n  await removeDependencies(removeDepList, packageManager);\n\n  /** ======================== Step 2 Remove the content ======================== */\n  // Get the new package information\n  var {allDependencies, currentComponents} = getPackageInfo(packagePath, false);\n\n  isHeroUIAll = !!allDependencies[HERO_UI];\n\n  const type: SAFE_ANY = isHeroUIAll ? 'all' : 'partial';\n\n  removeTailwind(type, {\n    currentComponents,\n    isHeroUIAll,\n    isPnpm: packageManager === 'pnpm',\n    prettier,\n    tailwindPath: tailwindPath!\n  });\n\n  /** ======================== Step 3 Remove the pnpm ======================== */\n  if (!currentComponents.length && !isHeroUIAll) {\n    if (packageManager === 'pnpm') {\n      const npmrcPath = resolver('.npmrc');\n\n      if (existsSync(npmrcPath)) {\n        let content = readFileSync(npmrcPath, 'utf-8');\n\n        content = content.replace(pnpmRequired.content, '');\n\n        Logger.newLine();\n        Logger.info('Removing specified .npmrc file content');\n\n        writeFileSync(npmrcPath, content, 'utf-8');\n      }\n    }\n\n    Logger.newLine();\n    Logger.warn(\n      `No HeroUI components remain installed. Ensure the HeroUIProvider is also removed if necessary.\\nFor more information, visit: ${DOCS_PROVIDER_SETUP}`\n    );\n  }\n\n  Logger.newLine();\n\n  Logger.success(\n    `✅ Successfully removed the specified HeroUI components: ${components\n      .map((c) => chalk.underline(c))\n      .join(', ')}`\n  );\n\n  process.exit(0);\n}\n","import type {Agent} from './detect';\nimport type {HeroUIComponents} from 'src/constants/component';\n\nimport {existsSync, readFileSync, writeFileSync} from 'node:fs';\n\nimport {tailwindRequired} from 'src/constants/required';\n\nimport {type CheckType, checkTailwind} from './check';\nimport {exec} from './exec';\nimport {fixTailwind} from './fix';\nimport {Logger} from './logger';\nimport {getMatchArray, replaceMatchArray} from './match';\nimport {getPackageManagerInfo} from './utils';\n\nexport async function removeDependencies(components: string[], packageManager: Agent) {\n  const {remove} = getPackageManagerInfo(packageManager);\n\n  await exec(`${packageManager} ${remove} ${components.join(' ')}`);\n\n  return;\n}\n\nexport async function removeTailwind(\n  type: CheckType,\n  options: {\n    tailwindPath?: string;\n    currentComponents: HeroUIComponents;\n    isPnpm: boolean;\n    prettier: boolean;\n    isHeroUIAll: boolean;\n  }\n) {\n  const {currentComponents, isHeroUIAll, isPnpm, prettier, tailwindPath} = options;\n\n  if (tailwindPath && !existsSync(tailwindPath)) {\n    Logger.prefix('warn', `No tailwind.config.(j|t)s found remove action skipped`);\n\n    return;\n  }\n\n  let tailwindContent = readFileSync(tailwindPath!, 'utf-8');\n  const contentMatch = getMatchArray('content', tailwindContent);\n  const pluginsMatch = getMatchArray('plugins', tailwindContent);\n\n  const insIncludeAll = contentMatch.some((c) => c.includes(tailwindRequired.content));\n\n  // Not installed HeroUI components then remove the tailwind content about heroui\n  if (!currentComponents.length && !isHeroUIAll) {\n    const index = pluginsMatch.findIndex((c) => c.includes('heroui'));\n\n    index !== -1 && pluginsMatch.splice(index, 1);\n    tailwindContent = replaceMatchArray('plugins', tailwindContent, pluginsMatch);\n\n    // Remove the import heroui content\n    tailwindContent = tailwindContent.replace(/(const|var|let|import)[\\W\\w]+?heroui.*?;\\n/, '');\n  }\n\n  // If there are already have all heroui content include then don't need to remove the content\n  if (!insIncludeAll) {\n    // Remove the heroui content\n    while (contentMatch.some((c) => c.includes('heroui'))) {\n      contentMatch.splice(\n        contentMatch.findIndex((c) => c.includes('heroui')),\n        1\n      );\n    }\n    tailwindContent = replaceMatchArray('content', tailwindContent, contentMatch);\n  }\n  //  if (!currentComponents.length && isHeroUIAll) {\n  //   const index = contentMatch.findIndex(c => c.includes('heroui'));\n\n  //   // Remove the heroui content\n  //   index !== -1 &&\n  //     contentMatch.splice(\n  //       contentMatch.indexOf('./node_modules/@heroui/theme/dist/components'),\n  //       1\n  //     );\n  //   tailwindContent = replaceMatchArray('content', tailwindContent, contentMatch);\n  // } else if (!isHeroUIAll && currentComponents.length) {\n  //   const index = contentMatch.indexOf(tailwindRequired.content);\n\n  //   // Remove the heroui content\n  //   index !== -1 && contentMatch.splice(index, 1);\n  //   tailwindContent = replaceMatchArray('content', tailwindContent, contentMatch);\n  // }\n  // Write the tailwind content\n  writeFileSync(tailwindPath!, tailwindContent, 'utf-8');\n\n  const [, ...errorInfoList] = checkTailwind(\n    type as 'partial',\n    tailwindPath!,\n    currentComponents,\n    isPnpm,\n    undefined,\n    true\n  );\n\n  fixTailwind(type, {errorInfoList, format: prettier, tailwindPath: tailwindPath!});\n\n  Logger.newLine();\n  Logger.info(`Remove the removed components tailwind content in file: ${tailwindPath}`);\n}\n","import type {AppendKeyValue} from '@helpers/type';\n\nimport fs from 'node:fs';\n\nimport {catchPnpmExec} from '@helpers/actions/upgrade/catch-pnpm-exec';\nimport {getBetaVersion} from '@helpers/beta';\nimport {checkIllegalComponents} from '@helpers/check';\nimport {detect} from '@helpers/detect';\nimport {exec} from '@helpers/exec';\nimport {Logger} from '@helpers/logger';\nimport {colorMatchRegex} from '@helpers/output-info';\nimport {getPackageInfo} from '@helpers/package';\nimport {setupPnpm} from '@helpers/setup';\nimport {upgrade, writeUpgradeVersion} from '@helpers/upgrade';\nimport {getColorVersion, getPackageManagerInfo, transformPeerVersion} from '@helpers/utils';\nimport {type HeroUIComponents} from 'src/constants/component';\nimport {resolver} from 'src/constants/path';\nimport {HERO_UI} from 'src/constants/required';\nimport {store} from 'src/constants/store';\nimport {getAutocompleteMultiselect, getMultiselect, getSelect} from 'src/prompts';\nimport {compareVersions, getLatestVersion} from 'src/scripts/helpers';\n\ninterface UpgradeActionOptions {\n  packagePath?: string;\n  all?: boolean;\n  major?: boolean;\n  minor?: boolean;\n  patch?: boolean;\n  write?: boolean;\n  beta?: boolean;\n}\n\ntype TransformComponent = Required<\n  AppendKeyValue<HeroUIComponents[0], 'latestVersion', string> & {isLatest: boolean}\n>;\n\nfunction betaCompareVersions(version: string, latestVersion: string, beta: boolean) {\n  // compareResult(beta, 2.1.0) = 0\n  // So we need to check if it is autoChangeTag like `beta` or `canary` and latestVersion is not match `beta` or `canary` then return false\n  // Example: `beta` Compare `2.1.0` (not latest), `beta` Compare `2.1.0-beta.0` (latest)\n  const autoChangeTag = version.match(/(^\\w+$)/)?.[1];\n\n  if (autoChangeTag) {\n    return latestVersion.includes(autoChangeTag);\n  }\n\n  const compareResult = compareVersions(version, latestVersion);\n\n  // Beta version is greater than latest version if beta is true\n  // compareResult(2.1.0, 2.1.0-beta.0) = 1\n  // Example: 2.1.0 < 2.1.0-beta.0\n  return beta && compareResult === 1 && !version.includes('beta') ? false : compareResult >= 0;\n}\n\nexport async function upgradeAction(components: string[], options: UpgradeActionOptions) {\n  const {\n    all = false,\n    beta = false,\n    packagePath = resolver('package.json'),\n    write = false\n  } = options;\n  const {allDependencies, currentComponents, dependencies, devDependencies, packageJson} =\n    getPackageInfo(packagePath, false);\n\n  const isHeroUIAll = !!allDependencies[HERO_UI];\n\n  const transformComponents: TransformComponent[] = [];\n\n  await Promise.all(\n    currentComponents.map(async (component) => {\n      const latestVersion =\n        store.heroUIComponentsMap[component.name]?.version ||\n        (await getLatestVersion(component.package));\n      const mergedVersion = beta ? await getBetaVersion(component.package) : latestVersion;\n      const compareResult = betaCompareVersions(component.version, mergedVersion, beta);\n\n      transformComponents.push({\n        ...component,\n        isLatest: compareResult,\n        latestVersion: mergedVersion\n      });\n    })\n  );\n\n  // If no Installed HeroUI components then exit\n  if (!transformComponents.length && !isHeroUIAll) {\n    Logger.prefix('error', `No HeroUI components detected in your package.json at: ${packagePath}`);\n\n    return;\n  }\n\n  if (all) {\n    components = currentComponents.map((component) => component.package);\n  } else if (!components.length) {\n    // If have the main heroui then add\n    if (isHeroUIAll) {\n      const herouiData = {\n        isLatest:\n          compareVersions(store.latestVersion, transformPeerVersion(allDependencies[HERO_UI])) <= 0,\n        latestVersion: store.latestVersion,\n        package: HERO_UI,\n        version: transformPeerVersion(allDependencies[HERO_UI])\n      } as TransformComponent;\n\n      transformComponents.push(herouiData);\n    }\n\n    // If all package is latest then pass\n    if (transformComponents.every((component) => component.isLatest)) {\n      Logger.success('✅ All HeroUI packages are up to date');\n      process.exit(0);\n    }\n\n    components = await getAutocompleteMultiselect(\n      'Select the components to upgrade',\n      transformComponents.map((component) => {\n        const isUpToDate = betaCompareVersions(component.version, component.latestVersion, beta);\n\n        return {\n          disabled: isUpToDate,\n          disabledMessage: 'Already up to date',\n          title: `${component.package}${\n            isUpToDate\n              ? ''\n              : `@${component.version} -> ${getColorVersion(\n                  component.version,\n                  component.latestVersion\n                )}`\n          }`,\n          value: component.package\n        };\n      })\n    );\n  } else {\n    // Check if the components are valid\n    if (!checkIllegalComponents(components)) {\n      return;\n    }\n  }\n\n  components = components.map((c) => {\n    if (store.heroUIComponentsMap[c]?.package) {\n      return store.heroUIComponentsMap[c]!.package;\n    }\n\n    return c;\n  });\n\n  /** ======================== Upgrade ======================== */\n  const upgradeOptionList = transformComponents.filter((c) => components.includes(c.package));\n\n  let result = await upgrade({\n    all,\n    allDependencies,\n    isHeroUIAll,\n    upgradeOptionList\n  });\n  let ignoreList: string[] = [];\n  const packageManager = await detect();\n\n  if (result.length) {\n    const isExecute = await getSelect('Would you like to proceed with the upgrade?', [\n      {\n        title: 'Yes',\n        value: true\n      },\n      {\n        description: 'Select this if you wish to exclude certain packages from the upgrade',\n        title: 'No',\n        value: false\n      }\n    ]);\n\n    const {install} = getPackageManagerInfo(packageManager);\n\n    if (!isExecute) {\n      // Ask whether need to remove some package not to upgrade\n      const isNeedRemove = await getSelect(\n        'Would you like to exclude any packages from the upgrade?',\n        [\n          {\n            description: 'Select this to choose packages to exclude',\n            title: 'Yes',\n            value: true\n          },\n          {\n            description: 'Select this to proceed without excluding any packages',\n            title: 'No',\n            value: false\n          }\n        ]\n      );\n\n      if (isNeedRemove) {\n        ignoreList = await getMultiselect(\n          'Select the packages you want to exclude from the upgrade:',\n          result.map((c) => {\n            return {\n              description: `${c.version} -> ${getColorVersion(c.version, c.latestVersion)}`,\n              title: c.package,\n              value: c.package\n            };\n          })\n        );\n      }\n    }\n\n    // Remove the components that need to be ignored\n    result = result.filter((r) => {\n      return !ignoreList.some((ignore) => r.package === ignore);\n    });\n\n    if (write) {\n      // Write the upgrade version to the package file\n      writeUpgradeVersion({\n        dependencies,\n        devDependencies,\n        upgradePackageList: result\n      });\n\n      fs.writeFileSync(packagePath, JSON.stringify(packageJson, null, 2), 'utf-8');\n\n      Logger.newLine();\n      Logger.success('✅ Upgrade version written to package.json');\n      process.exit(0);\n    } else {\n      await catchPnpmExec(() =>\n        exec(\n          `${packageManager} ${install} ${result.reduce((acc, component, index) => {\n            return `${acc}${index === 0 ? '' : ' '}${\n              component.package\n            }@${component.latestVersion.replace(colorMatchRegex, '')}`;\n          }, '')}`\n        )\n      );\n    }\n  }\n\n  /** ======================== Setup Pnpm ======================== */\n  setupPnpm(packageManager);\n\n  Logger.newLine();\n  Logger.success('✅ Upgrade complete. All components are up to date.');\n\n  process.exit(0);\n}\n","import type {Agent} from './detect';\n\nimport {existsSync, writeFileSync} from 'node:fs';\n\nimport {resolver} from 'src/constants/path';\nimport {pnpmRequired} from 'src/constants/required';\n\nimport {checkPnpm} from './check';\nimport {fixPnpm} from './fix';\n\nexport async function setupPnpm(packageManager: Agent) {\n  if (packageManager === 'pnpm') {\n    const npmrcPath = resolver('.npmrc');\n\n    if (!existsSync(npmrcPath)) {\n      writeFileSync(resolver('.npmrc'), pnpmRequired.content, 'utf-8');\n    } else {\n      const [isCorrectPnpm] = checkPnpm(npmrcPath);\n\n      if (!isCorrectPnpm) {\n        fixPnpm(npmrcPath);\n      }\n    }\n  }\n}\n"]}